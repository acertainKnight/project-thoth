version: '3.8'

services:
  thoth:
    build:
      context: .
      dockerfile: Dockerfile
      args:
        - BUILD_ENV=production
    image: thoth-api:latest
    container_name: thoth-api-prod
    restart: unless-stopped

    # Security: Run as non-root user
    user: "1000:1000"

    # Security: Read-only root filesystem
    read_only: true
    tmpfs:
      - /tmp
      - /var/tmp
      - /app/tmp:uid=1000,gid=1000

    ports:
      - "127.0.0.1:8000:8000"  # Bind to localhost only for security

    volumes:
      # Configuration (read-only)
      - ./.env:/app/.env:ro

      # Data directories (persistent, read-write)
      - thoth-data:/app/data
      - thoth-knowledge:/app/knowledge
      - thoth-logs:/app/logs

      # Obsidian vault (map to your actual vault)
      - /path/to/production/obsidian/vault:/app/obsidian-vault:ro

    environment:
      - PYTHONUNBUFFERED=1
      - LOG_LEVEL=INFO
      - ENVIRONMENT=production

    networks:
      - thoth-prod-net

    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 60s

    # Production resource limits
    deploy:
      resources:
        limits:
          memory: 4G
          cpus: '2.0'
        reservations:
          memory: 1G
          cpus: '0.5'
      restart_policy:
        condition: any
        delay: 5s
        max_attempts: 3
        window: 120s

    # Security: Limit capabilities
    cap_drop:
      - ALL
    cap_add:
      - NET_BIND_SERVICE

    # Security: No new privileges
    security_opt:
      - no-new-privileges:true

  # Production reverse proxy (Nginx)
  nginx:
    image: nginx:1.25-alpine
    container_name: thoth-nginx-prod
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
      - nginx-cache:/var/cache/nginx
    depends_on:
      - thoth
    networks:
      - thoth-prod-net
    deploy:
      resources:
        limits:
          memory: 512M
        reservations:
          memory: 128M

  # Log aggregation (optional)
  fluent-bit:
    image: fluent/fluent-bit:2.2
    container_name: thoth-fluent-bit
    restart: unless-stopped
    volumes:
      - ./fluent-bit/fluent-bit.conf:/fluent-bit/etc/fluent-bit.conf:ro
      - thoth-logs:/logs:ro
    depends_on:
      - thoth
    networks:
      - thoth-prod-net

  # Monitoring (optional)
  prometheus:
    image: prom/prometheus:latest
    container_name: thoth-prometheus
    restart: unless-stopped
    ports:
      - "127.0.0.1:9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
    networks:
      - thoth-prod-net

networks:
  thoth-prod-net:
    driver: bridge
    internal: false
    ipam:
      config:
        - subnet: 172.20.0.0/16

# Named volumes for production data persistence
volumes:
  thoth-data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/thoth/data

  thoth-knowledge:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/thoth/knowledge

  thoth-logs:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: /opt/thoth/logs

  nginx-cache:
  prometheus-data:
