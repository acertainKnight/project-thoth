# ==============================================================================
# Nginx Configuration for Letta Memory Service Load Balancing
# ==============================================================================

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                   '$status $body_bytes_sent "$http_referer" '
                   '"$http_user_agent" "$http_x_forwarded_for" '
                   'rt=$request_time uct="$upstream_connect_time" '
                   'uht="$upstream_header_time" urt="$upstream_response_time"';

    access_log /var/log/nginx/access.log main;
    error_log  /var/log/nginx/error.log warn;

    # Performance settings
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;

    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1000;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml;

    # Rate limiting for API protection
    limit_req_zone $binary_remote_addr zone=memory_api:10m rate=100r/m;
    limit_req_zone $binary_remote_addr zone=memory_api_burst:10m rate=10r/s;

    # Upstream configuration for Letta memory service
    upstream letta_memory_backend {
        least_conn;

        # Primary Letta instance
        server letta:8283 max_fails=3 fail_timeout=30s;

        # Additional instances for scaling (uncomment when needed)
        # server letta-replica-1:8283 max_fails=3 fail_timeout=30s;
        # server letta-replica-2:8283 max_fails=3 fail_timeout=30s;

        # Health check
        keepalive 32;
    }

    # Main server configuration
    server {
        listen 80;
        server_name letta-memory.local localhost;

        # Security headers
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header X-Content-Type-Options "nosniff" always;
        add_header X-XSS-Protection "1; mode=block" always;
        add_header Referrer-Policy "strict-origin-when-cross-origin" always;

        # Health check endpoint (bypass rate limiting)
        location /health {
            proxy_pass http://letta_memory_backend/health;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Quick timeout for health checks
            proxy_connect_timeout 5s;
            proxy_send_timeout 5s;
            proxy_read_timeout 5s;
        }

        # Memory API endpoints with rate limiting
        location /api/ {
            # Apply rate limiting
            limit_req zone=memory_api burst=20 nodelay;
            limit_req zone=memory_api_burst burst=5 nodelay;

            # Proxy to Letta backend
            proxy_pass http://letta_memory_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Memory operations can take time
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 120s;

            # Buffer settings for large memory operations
            proxy_buffering on;
            proxy_buffer_size 128k;
            proxy_buffers 4 256k;
            proxy_busy_buffers_size 256k;
        }

        # WebSocket support for real-time memory updates
        location /ws/ {
            proxy_pass http://letta_memory_backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection "upgrade";
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # WebSocket timeout settings
            proxy_connect_timeout 60s;
            proxy_send_timeout 60s;
            proxy_read_timeout 300s;  # 5 minutes for long operations
        }

        # Default route - proxy everything else to Letta
        location / {
            limit_req zone=memory_api burst=10 nodelay;

            proxy_pass http://letta_memory_backend;
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;

            # Standard timeouts
            proxy_connect_timeout 30s;
            proxy_send_timeout 60s;
            proxy_read_timeout 60s;
        }

        # Metrics endpoint for monitoring
        location /metrics {
            # Restrict access to monitoring systems
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;

            proxy_pass http://letta_memory_backend/metrics;
            proxy_set_header Host $host;
        }

        # Error pages
        error_page 502 503 504 /50x.html;
        location = /50x.html {
            root /usr/share/nginx/html;
        }
    }

    # SSL/HTTPS configuration (uncomment for production)
    # server {
    #     listen 443 ssl http2;
    #     server_name letta-memory.yourdomain.com;
    #
    #     ssl_certificate /etc/ssl/certs/letta-memory.crt;
    #     ssl_certificate_key /etc/ssl/private/letta-memory.key;
    #
    #     # SSL security settings
    #     ssl_protocols TLSv1.2 TLSv1.3;
    #     ssl_ciphers ECDHE-RSA-AES256-GCM-SHA512:DHE-RSA-AES256-GCM-SHA512;
    #     ssl_prefer_server_ciphers off;
    #     ssl_session_cache shared:SSL:10m;
    #     ssl_session_timeout 10m;
    #
    #     # Same location blocks as above
    # }
}
