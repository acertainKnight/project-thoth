graph TD
    %% Main Entry Point
    subgraph "File: src/thoth/main.py"
        main_entry["Function: main() -> int<br/>Entry point that delegates to CLI main"]
    end

    %% CLI Main Module
    subgraph "File: src/thoth/cli/main.py"
        cli_main["Function: main() -> None<br/>Main entry point for the Thoth CLI"]
        cli_main_create_parser["argparse.ArgumentParser()<br/>Create command line argument parser"]
        cli_main_create_pipeline["ThothPipeline()<br/>Create pipeline instance"]
        cli_main_parse_args["parser.parse_args()<br/>Parse command line arguments"]
        cli_main_execute_func["args.func(args, pipeline)<br/>Execute selected command function"]

        cli_main --> cli_main_create_parser
        cli_main --> cli_main_create_pipeline
        cli_main --> cli_main_parse_args
        cli_main --> cli_main_execute_func
    end

    %% Pipeline Core
    subgraph "File: src/thoth/pipeline.py"
        pipeline_class["Class: ThothPipeline<br/>Main processing pipeline"]
        pipeline_init["Method: __init__(...) -> None<br/>Initialize pipeline with services"]
        pipeline_process_pdf["Method: process_pdf(pdf_path) -> Path<br/>Process PDF through complete pipeline"]
        pipeline_ocr_convert["Method: _ocr_convert(pdf_path) -> tuple[Path, Path]<br/>Convert PDF to Markdown using OCR"]
        pipeline_analyze_content["Method: _analyze_content(markdown_path)<br/>Analyze content with LLM"]
        pipeline_extract_citations["Method: _extract_citations(markdown_path) -> list[Citation]<br/>Extract citations from content"]
        pipeline_generate_note["Method: _generate_note(...) -> tuple[str, str, str]<br/>Generate Obsidian note"]
        pipeline_index_to_rag["Method: _index_to_rag(file_path) -> None<br/>Index file to RAG system"]
        pipeline_regenerate_all_notes["Method: regenerate_all_notes() -> list[tuple[Path, Path]]<br/>Regenerate all markdown notes"]
        pipeline_consolidate_tags_only["Method: consolidate_tags_only() -> dict[str, Any]<br/>Consolidate existing tags without suggesting additional"]
        pipeline_suggest_additional_tags["Method: suggest_additional_tags() -> dict[str, Any]<br/>Suggest additional relevant tags"]
        pipeline_consolidate_and_retag_all["Method: consolidate_and_retag_all_articles() -> dict[str, Any]<br/>Consolidate tags and suggest additional"]
        pipeline_index_knowledge_base["Method: index_knowledge_base() -> dict[str, Any]<br/>Index all markdown files to RAG system"]
        pipeline_search_knowledge_base["Method: search_knowledge_base(query, k, filter) -> list[dict]<br/>Search knowledge base for relevant documents"]
        pipeline_ask_knowledge_base["Method: ask_knowledge_base(question, k, filter) -> dict<br/>Ask question based on knowledge base"]
        pipeline_web_search["Method: web_search(query, num_results, provider) -> list[SearchResult]<br/>Perform web search"]
        pipeline_clear_rag_index["Method: clear_rag_index() -> None<br/>Clear RAG index"]
        pipeline_get_rag_stats["Method: get_rag_stats() -> dict[str, Any]<br/>Get RAG system statistics"]

        pipeline_class --> pipeline_init
        pipeline_class --> pipeline_process_pdf
        pipeline_class --> pipeline_ocr_convert
        pipeline_class --> pipeline_analyze_content
        pipeline_class --> pipeline_extract_citations
        pipeline_class --> pipeline_generate_note
        pipeline_class --> pipeline_index_to_rag
        pipeline_class --> pipeline_regenerate_all_notes
        pipeline_class --> pipeline_consolidate_tags_only
        pipeline_class --> pipeline_suggest_additional_tags
        pipeline_class --> pipeline_consolidate_and_retag_all
        pipeline_class --> pipeline_index_knowledge_base
        pipeline_class --> pipeline_search_knowledge_base
        pipeline_class --> pipeline_ask_knowledge_base
        pipeline_class --> pipeline_web_search
        pipeline_class --> pipeline_clear_rag_index
        pipeline_class --> pipeline_get_rag_stats
    end

    %% CLI System Module
    subgraph "File: src/thoth/cli/system.py"
        system_run_monitor["Function: run_monitor(args, pipeline) -> int<br/>Run the PDF monitor"]
        system_process_pdf["Function: process_pdf(args, pipeline) -> None<br/>Process a single PDF file"]
        system_run_api_server["Function: run_api_server(args, pipeline) -> int<br/>Run the Obsidian API server"]
        system_run_scrape_filter_test["Function: run_scrape_filter_test(args, pipeline) -> int<br/>Test the filter with sample articles"]
        system_configure_subparser["Function: configure_subparser(subparsers) -> None<br/>Configure subparser for system commands"]
        system_start_obsidian_server["start_obsidian_server()<br/>Start the Obsidian API server"]
        system_create_pdf_monitor["PDFMonitor(watch_dir, pipeline, polling_interval, recursive)<br/>Create PDF monitor instance"]
        system_monitor_start["monitor.start()<br/>Start monitoring for PDF files"]
        system_create_sample_queries["Create sample ResearchQuery objects for testing"]
        system_filter_process_article["pipeline.filter.process_article(metadata, download_pdf)<br/>Test article filtering"]

        system_configure_subparser --> system_run_monitor
        system_configure_subparser --> system_process_pdf
        system_configure_subparser --> system_run_api_server
        system_configure_subparser --> system_run_scrape_filter_test
        system_run_monitor --> system_start_obsidian_server
        system_run_monitor --> system_create_pdf_monitor
        system_run_monitor --> system_monitor_start
        system_run_api_server --> system_start_obsidian_server
        system_run_scrape_filter_test --> system_create_sample_queries
        system_run_scrape_filter_test --> system_filter_process_article
    end

    %% CLI Agent Module
    subgraph "File: src/thoth/cli/agent.py"
        agent_configure_subparser["Function: configure_subparser(subparsers) -> None<br/>Configure subparser for agent commands"]
        agent_run_agent_chat["Function: run_agent_chat(_args, pipeline) -> int<br/>Start an interactive chat with the research assistant agent"]
        agent_create_research_assistant["create_research_assistant(service_manager, enable_memory)<br/>Create research assistant agent instance"]
        agent_chat_loop["agent.chat(message, session_id)<br/>Interactive chat loop with agent"]

        agent_configure_subparser --> agent_run_agent_chat
        agent_run_agent_chat --> agent_create_research_assistant
        agent_run_agent_chat --> agent_chat_loop
    end

    %% CLI Discovery Module
    subgraph "File: src/thoth/cli/discovery.py"
        discovery_configure_subparser["Function: configure_subparser(subparsers) -> None<br/>Configure subparser for discovery commands"]
        discovery_run_discovery_command["Function: run_discovery_command(args, pipeline) -> int<br/>Handle discovery commands"]
        discovery_run_discovery_run["Function: run_discovery_run(args, pipeline) -> int<br/>Run discovery for sources"]
        discovery_run_discovery_list["Function: run_discovery_list(_args, pipeline) -> int<br/>List all discovery sources"]
        discovery_run_discovery_show["Function: run_discovery_show(args, pipeline) -> int<br/>Show detailed information about a discovery source"]
        discovery_run_discovery_create["Function: run_discovery_create(args, pipeline) -> int<br/>Create a new discovery source"]
        discovery_run_discovery_edit["Function: run_discovery_edit(args, pipeline) -> int<br/>Edit an existing discovery source"]
        discovery_run_discovery_delete["Function: run_discovery_delete(args, pipeline) -> int<br/>Delete a discovery source"]
        discovery_run_discovery_scheduler["Function: run_discovery_scheduler(args, pipeline) -> int<br/>Handle discovery scheduler commands"]
        discovery_run_discovery_scheduler_stop["Function: run_discovery_scheduler_stop(_args, pipeline) -> int<br/>Stop the discovery scheduler"]

        discovery_configure_subparser --> discovery_run_discovery_command
        discovery_run_discovery_command --> discovery_run_discovery_run
        discovery_run_discovery_command --> discovery_run_discovery_list
        discovery_run_discovery_command --> discovery_run_discovery_show
        discovery_run_discovery_command --> discovery_run_discovery_create
        discovery_run_discovery_command --> discovery_run_discovery_edit
        discovery_run_discovery_command --> discovery_run_discovery_delete
        discovery_run_discovery_command --> discovery_run_discovery_scheduler
        discovery_run_discovery_command --> discovery_run_discovery_scheduler_stop
    end

    %% CLI Notes Module
    subgraph "File: src/thoth/cli/notes.py"
        notes_configure_subparser["Function: configure_subparser(subparsers) -> None<br/>Configure subparser for notes commands"]
        notes_run_reprocess_note["Function: run_reprocess_note(args, pipeline) -> int<br/>Regenerate the note for an existing article"]
        notes_run_regenerate_all_notes["Function: run_regenerate_all_notes(args, pipeline) -> int<br/>Regenerate all notes for all articles in the citation graph"]
        notes_run_consolidate_tags["Function: run_consolidate_tags(args, pipeline) -> int<br/>Consolidate existing tags and suggest additional relevant tags"]
        notes_get_article_data["pipeline.citation_tracker.get_article_data_for_regeneration(article_id)<br/>Get article data for regeneration"]
        notes_create_note["pipeline.services.note.create_note(pdf_path, markdown_path, analysis, citations)<br/>Create formatted note"]
        notes_update_file_paths["pipeline.citation_tracker.update_article_file_paths(article_id, new_pdf_path, new_markdown_path)<br/>Update file paths in tracker"]
        notes_regenerate_all["pipeline.regenerate_all_notes()<br/>Regenerate all notes"]
        notes_consolidate_retag["pipeline.consolidate_and_retag_all_articles()<br/>Consolidate tags and retag articles"]

        notes_configure_subparser --> notes_run_reprocess_note
        notes_configure_subparser --> notes_run_regenerate_all_notes
        notes_configure_subparser --> notes_run_consolidate_tags
        notes_run_reprocess_note --> notes_get_article_data
        notes_run_reprocess_note --> notes_create_note
        notes_run_reprocess_note --> notes_update_file_paths
        notes_run_regenerate_all_notes --> notes_regenerate_all
        notes_run_consolidate_tags --> notes_consolidate_retag
    end

    %% CLI PDF Module
    subgraph "File: src/thoth/cli/pdf.py"
        pdf_configure_subparser["Function: configure_subparser(subparsers) -> None<br/>Configure subparser for PDF commands"]
        pdf_run_locate_pdf["Function: run_locate_pdf(args, pipeline) -> int<br/>Locate open-access PDFs for articles"]
        pdf_run_pdf_stats["Function: run_pdf_stats(args, pipeline) -> int<br/>Show statistics about PDF availability"]
        pdf_run_test_source["Function: run_test_source(args, pipeline) -> int<br/>Test PDF location sources"]
        pdf_process_all_articles["Function: _process_all_articles(pdf_locator, update_existing, dry_run) -> None<br/>Process all articles to locate PDFs"]
        pdf_create_service_manager["ServiceManager()<br/>Create service manager instance"]
        pdf_get_pdf_locator["service_manager.get_service('pdf_locator')<br/>Get PDF locator service"]
        pdf_locate_call["pdf_locator.locate(doi, arxiv_id)<br/>Locate PDF for identifiers"]

        pdf_configure_subparser --> pdf_run_locate_pdf
        pdf_configure_subparser --> pdf_run_pdf_stats
        pdf_configure_subparser --> pdf_run_test_source
        pdf_run_locate_pdf --> pdf_create_service_manager
        pdf_run_locate_pdf --> pdf_get_pdf_locator
        pdf_run_locate_pdf --> pdf_locate_call
        pdf_run_locate_pdf --> pdf_process_all_articles
        pdf_run_test_source --> pdf_create_service_manager
        pdf_run_test_source --> pdf_get_pdf_locator
    end

    %% CLI RAG Module
    subgraph "File: src/thoth/cli/rag.py"
        rag_configure_subparser["Function: configure_subparser(subparsers) -> None<br/>Configure subparser for RAG commands"]
        rag_run_rag_command["Function: run_rag_command(args, pipeline) -> int<br/>Handle RAG commands"]
        rag_run_rag_index["Function: run_rag_index(args, pipeline) -> int<br/>Index all documents in the knowledge base"]
        rag_run_rag_search["Function: run_rag_search(args, pipeline) -> int<br/>Search the knowledge base"]
        rag_run_rag_ask["Function: run_rag_ask(args, pipeline) -> int<br/>Ask a question about the knowledge base"]
        rag_run_rag_stats["Function: run_rag_stats(args, pipeline) -> int<br/>Show RAG system statistics"]
        rag_run_rag_clear["Function: run_rag_clear(args, pipeline) -> int<br/>Clear the RAG vector index"]

        rag_configure_subparser --> rag_run_rag_command
        rag_run_rag_command --> rag_run_rag_index
        rag_run_rag_command --> rag_run_rag_search
        rag_run_rag_command --> rag_run_rag_ask
        rag_run_rag_command --> rag_run_rag_stats
        rag_run_rag_command --> rag_run_rag_clear
    end

    %% Discovery Scheduler Module
    subgraph "File: src/thoth/discovery/scheduler.py"
        discovery_scheduler_error_class["Class: DiscoverySchedulerError<br/>Exception raised for errors in the discovery scheduler"]
        discovery_scheduler_class["Class: DiscoveryScheduler<br/>Scheduler for automated article discovery"]
        discovery_scheduler_init["Method: __init__(discovery_manager, schedule_file) -> None<br/>Initialize the Discovery Scheduler"]
        discovery_scheduler_start["Method: start() -> None<br/>Start the discovery scheduler"]
        discovery_scheduler_stop["Method: stop() -> None<br/>Stop the discovery scheduler"]
        discovery_scheduler_add_source["Method: add_scheduled_source(source, schedule) -> None<br/>Add a source to the scheduler"]
        discovery_scheduler_remove_source["Method: remove_scheduled_source(source_name) -> None<br/>Remove a source from the scheduler"]
        discovery_scheduler_update_schedule["Method: update_source_schedule(source_name, schedule) -> None<br/>Update the schedule for an existing source"]
        discovery_scheduler_get_status["Method: get_schedule_status() -> dict[str, Any]<br/>Get the current status of all scheduled sources"]
        discovery_scheduler_run_now["Method: run_source_now(source_name) -> dict[str, Any]<br/>Run a specific source immediately, outside of its schedule"]
        discovery_scheduler_loop["Method: _scheduler_loop() -> None<br/>Main scheduler loop that runs in a separate thread"]
        discovery_scheduler_check_run["Method: _check_and_run_scheduled_sources() -> None<br/>Check for sources that need to run and execute them"]
        discovery_scheduler_calc_next["Method: _calculate_next_run(schedule) -> str<br/>Calculate the next run time for a schedule configuration"]
        discovery_scheduler_load_state["Method: _load_schedule_state() -> dict[str, Any]<br/>Load schedule state from file"]
        discovery_scheduler_save_state["Method: _save_schedule_state() -> None<br/>Save schedule state to file"]
        discovery_scheduler_sync["Method: sync_with_discovery_manager() -> None<br/>Synchronize scheduler state with discovery manager sources"]
        discovery_scheduler_next_runs["Method: get_next_scheduled_runs(hours) -> list[dict[str, Any]]<br/>Get upcoming scheduled runs within the specified time window"]

        discovery_scheduler_class --> discovery_scheduler_init
        discovery_scheduler_class --> discovery_scheduler_start
        discovery_scheduler_class --> discovery_scheduler_stop
        discovery_scheduler_class --> discovery_scheduler_add_source
        discovery_scheduler_class --> discovery_scheduler_remove_source
        discovery_scheduler_class --> discovery_scheduler_update_schedule
        discovery_scheduler_class --> discovery_scheduler_get_status
        discovery_scheduler_class --> discovery_scheduler_run_now
        discovery_scheduler_class --> discovery_scheduler_loop
        discovery_scheduler_class --> discovery_scheduler_check_run
        discovery_scheduler_class --> discovery_scheduler_calc_next
        discovery_scheduler_class --> discovery_scheduler_load_state
        discovery_scheduler_class --> discovery_scheduler_save_state
        discovery_scheduler_class --> discovery_scheduler_sync
        discovery_scheduler_class --> discovery_scheduler_next_runs
    end

    %% Discovery API Sources Module
    subgraph "File: src/thoth/discovery/api_sources.py"
        api_source_error_class["Class: APISourceError<br/>Exception raised for errors in API sources"]
        arxiv_client_discovery_class["Class: ArxivClient<br/>Client for interacting with arXiv API to retrieve citation metadata"]
        arxiv_client_discovery_init["Method: __init__(base_url, timeout, delay_seconds, max_retries) -> None<br/>Initialize arXiv API client"]
        arxiv_client_discovery_make_request["Method: _make_request(params) -> str<br/>Make a request to the arXiv API with rate limiting"]
        arxiv_client_discovery_search["Method: search(query, start, max_results, sort_by, sort_order, search_field) -> list[ArxivPaper]<br/>Search arXiv for papers matching the query"]
        arxiv_client_discovery_get_by_id["Method: get_by_id(paper_id) -> list[ArxivPaper]<br/>Get arXiv papers by their IDs"]
        arxiv_client_discovery_parse_response["Method: _parse_arxiv_response(xml_response) -> list[ArxivPaper]<br/>Parse arXiv API response XML into ArxivPaper objects"]
        arxiv_client_discovery_lookup["Method: arxiv_lookup(citations) -> list[Citation]<br/>Lookup citations in arXiv and enhance with additional metadata"]
        arxiv_client_discovery_update_citation["Method: _update_citation_from_arxiv(citation, paper) -> None<br/>Update citation with information from ArxivPaper"]
        arxiv_client_discovery_citation_count["Method: get_citation_count(paper_id) -> int | None<br/>Get the citation count for an arXiv paper by querying Semantic Scholar"]
        arxiv_client_discovery_close["Method: close() -> None<br/>Close the HTTP client"]

        base_api_source_class["Class: BaseAPISource (ABC)<br/>Base class for API sources"]
        base_api_source_search["Method: search(config, max_results) -> list[ScrapedArticleMetadata] (abstract)<br/>Search for articles using the API"]

        arxiv_api_source_class["Class: ArxivAPISource<br/>ArXiv API source for discovering research papers"]
        arxiv_api_source_init["Method: __init__(rate_limit_delay) -> None<br/>Initialize the ArXiv API source"]
        arxiv_api_source_search["Method: search(config, max_results) -> list[ScrapedArticleMetadata]<br/>Search ArXiv for papers"]
        arxiv_api_source_rate_limit["Method: _rate_limit() -> None<br/>Apply rate limiting between requests"]
        arxiv_api_source_parse_entry["Method: _parse_arxiv_entry(entry) -> ScrapedArticleMetadata | None<br/>Parse an ArXiv feed entry into ScrapedArticleMetadata"]

        pubmed_api_source_class["Class: PubMedAPISource<br/>PubMed API source for discovering biomedical research papers"]
        pubmed_api_source_init["Method: __init__(rate_limit_delay) -> None<br/>Initialize the PubMed API source"]
        pubmed_api_source_search["Method: search(config, max_results) -> list[ScrapedArticleMetadata]<br/>Search PubMed for papers"]
        pubmed_api_source_search_pmids["Method: _search_pmids(query, max_results) -> list[str]<br/>Search PubMed for PMIDs matching the query"]
        pubmed_api_source_fetch_details["Method: _fetch_article_details(pmids) -> list[ScrapedArticleMetadata]<br/>Fetch detailed article information for a list of PMIDs"]
        pubmed_api_source_fetch_batch["Method: _fetch_batch_details(pmids) -> list[ScrapedArticleMetadata]<br/>Fetch details for a batch of PMIDs"]
        pubmed_api_source_parse_article["Method: _parse_pubmed_article(article_elem) -> ScrapedArticleMetadata | None<br/>Parse a PubMed article XML element into ScrapedArticleMetadata"]
        pubmed_api_source_rate_limit["Method: _rate_limit() -> None<br/>Apply rate limiting between requests"]

        arxiv_api_source_class --> arxiv_api_source_init
        arxiv_api_source_class --> arxiv_api_source_search
        arxiv_api_source_class --> arxiv_api_source_rate_limit
        arxiv_api_source_class --> arxiv_api_source_parse_entry

        pubmed_api_source_class --> pubmed_api_source_init
        pubmed_api_source_class --> pubmed_api_source_search
        pubmed_api_source_class --> pubmed_api_source_search_pmids
        pubmed_api_source_class --> pubmed_api_source_fetch_details
        pubmed_api_source_class --> pubmed_api_source_fetch_batch
        pubmed_api_source_class --> pubmed_api_source_parse_article
        pubmed_api_source_class --> pubmed_api_source_rate_limit

        arxiv_client_discovery_class --> arxiv_client_discovery_init
        arxiv_client_discovery_class --> arxiv_client_discovery_make_request
        arxiv_client_discovery_class --> arxiv_client_discovery_search
        arxiv_client_discovery_class --> arxiv_client_discovery_get_by_id
        arxiv_client_discovery_class --> arxiv_client_discovery_parse_response
        arxiv_client_discovery_class --> arxiv_client_discovery_lookup
        arxiv_client_discovery_class --> arxiv_client_discovery_update_citation
        arxiv_client_discovery_class --> arxiv_client_discovery_citation_count
        arxiv_client_discovery_class --> arxiv_client_discovery_close

        base_api_source_class --> base_api_source_search
    end

    %% Discovery Chrome Extension Module
    subgraph "File: src/thoth/discovery/chrome_extension.py"
        chrome_extension_server_class["Class: ChromeExtensionServer<br/>WebSocket server for Chrome extension communication"]
        chrome_extension_server_init["Method: __init__(port) -> None<br/>Initialize the Chrome extension server"]
        chrome_extension_server_start["Method: start_server() -> None (async)<br/>Start the WebSocket server"]
        chrome_extension_server_handle_client["Method: handle_client(websocket, path) -> None (async)<br/>Handle WebSocket client connections"]
        chrome_extension_server_process_message["Method: process_message(data) -> dict[str, Any] (async)<br/>Process a message from the Chrome extension"]
        chrome_extension_server_test_selectors["Method: test_selectors(data) -> dict[str, Any] (async)<br/>Test CSS selectors on a webpage"]
        chrome_extension_server_save_config["Method: save_config(data) -> dict[str, Any] (async)<br/>Save a scraper configuration"]
        chrome_extension_server_load_config["Method: load_config(data) -> dict[str, Any] (async)<br/>Load a scraper configuration"]
        chrome_extension_server_list_configs["Method: list_configs() -> dict[str, Any] (async)<br/>List all saved configurations"]
        chrome_extension_server_test_scrape["Method: test_scrape(data) -> dict[str, Any] (async)<br/>Test a complete scraping configuration"]
        chrome_extension_server_convert_config["Method: chrome_config_to_scrape_config(chrome_config) -> ScrapeConfiguration<br/>Convert Chrome extension config to ScrapeConfiguration"]

        run_chrome_extension_server_func["Function: run_chrome_extension_server(port) -> None<br/>Run the Chrome extension WebSocket server"]

        chrome_extension_server_class --> chrome_extension_server_init
        chrome_extension_server_class --> chrome_extension_server_start
        chrome_extension_server_class --> chrome_extension_server_handle_client
        chrome_extension_server_class --> chrome_extension_server_process_message
        chrome_extension_server_class --> chrome_extension_server_test_selectors
        chrome_extension_server_class --> chrome_extension_server_save_config
        chrome_extension_server_class --> chrome_extension_server_load_config
        chrome_extension_server_class --> chrome_extension_server_list_configs
        chrome_extension_server_class --> chrome_extension_server_test_scrape
        chrome_extension_server_class --> chrome_extension_server_convert_config
    end

    %% Discovery Web Emulator Module
    subgraph "File: src/thoth/discovery/web_emulator.py"
        web_emulator_recorder_class["Class: WebEmulatorRecorder<br/>Simple Selenium-based browser recorder"]
        web_emulator_recorder_init["Method: __init__(driver_path) -> None<br/>Initialize browser recorder with Chrome driver"]
        web_emulator_recorder_start["Method: start_recording(url) -> None<br/>Open the browser for manual interaction"]
        web_emulator_recorder_stop["Method: stop_recording() -> BrowserRecording<br/>Close the browser and return recording data"]
        web_emulator_recorder_save["Method: save_recording(recording, path) -> None<br/>Save a recording to disk"]
        web_emulator_recorder_load["Method: load_recording(path) -> BrowserRecording<br/>Load a recording from disk"]

        run_emulator_func["Function: run_emulator(url) -> None<br/>Run the emulator as a simple CLI utility"]

        web_emulator_recorder_class --> web_emulator_recorder_init
        web_emulator_recorder_class --> web_emulator_recorder_start
        web_emulator_recorder_class --> web_emulator_recorder_stop
        web_emulator_recorder_class --> web_emulator_recorder_save
        web_emulator_recorder_class --> web_emulator_recorder_load
    end

    %% Discovery Emulator Scraper Module
    subgraph "File: src/thoth/discovery/emulator_scraper.py"
        emulator_scraper_class["Class: EmulatorScraper<br/>Replay a BrowserRecording and scrape the resulting page"]
        emulator_scraper_init["Method: __init__(driver_path) -> None<br/>Initialize emulator scraper with Chrome driver options"]
        emulator_scraper_scrape["Method: scrape(recording, config, max_articles) -> list[ScrapedArticleMetadata]<br/>Replay the recording and scrape the final page"]

        emulator_scraper_class --> emulator_scraper_init
        emulator_scraper_class --> emulator_scraper_scrape
    end

    %% Discovery Web Scraper Module
    subgraph "File: src/thoth/discovery/web_scraper.py"
        web_scraper_error_class["Class: WebScraperError<br/>Exception raised for errors in web scraping"]
        web_scraper_class["Class: WebScraper<br/>Flexible web scraper for article discovery"]
        web_scraper_init["Method: __init__(default_delay) -> None<br/>Initialize the web scraper"]
        web_scraper_scrape["Method: scrape(config, max_articles) -> list[ScrapedArticleMetadata]<br/>Scrape articles from a website using the provided configuration"]
        web_scraper_apply_config["Method: _apply_config_settings(config) -> None<br/>Apply configuration settings to the session"]
        web_scraper_scrape_page["Method: _scrape_page(url, config) -> list[ScrapedArticleMetadata]<br/>Scrape articles from a single page"]
        web_scraper_find_containers["Method: _find_article_containers(soup, config) -> list<br/>Find article containers on the page"]
        web_scraper_extract_metadata["Method: _extract_article_metadata(container, config, base_url) -> ScrapedArticleMetadata | None<br/>Extract article metadata from a container element"]
        web_scraper_extract_field["Method: _extract_field(container, rule, base_url) -> Any<br/>Extract a single field using the provided rule"]
        web_scraper_apply_transform["Method: _apply_transform(value, transform) -> str<br/>Apply transformation to extracted value"]
        web_scraper_normalize_authors["Method: _normalize_authors(authors) -> list[str]<br/>Normalize author names to a consistent format"]
        web_scraper_get_next_page["Method: _get_next_page_url(current_url, config) -> str | None<br/>Get the URL of the next page for pagination"]
        web_scraper_apply_rate_limit["Method: _apply_rate_limiting(config) -> None<br/>Apply rate limiting between requests"]
        web_scraper_test_config["Method: test_configuration(config) -> dict[str, Any]<br/>Test a scraping configuration and return sample data"]
        web_scraper_parse_html["Method: parse_html(html, base_url, config) -> list[ScrapedArticleMetadata]<br/>Parse HTML content using existing extraction rules"]

        web_scraper_class --> web_scraper_init
        web_scraper_class --> web_scraper_scrape
        web_scraper_class --> web_scraper_apply_config
        web_scraper_class --> web_scraper_scrape_page
        web_scraper_class --> web_scraper_find_containers
        web_scraper_class --> web_scraper_extract_metadata
        web_scraper_class --> web_scraper_extract_field
        web_scraper_class --> web_scraper_apply_transform
        web_scraper_class --> web_scraper_normalize_authors
        web_scraper_class --> web_scraper_get_next_page
        web_scraper_class --> web_scraper_apply_rate_limit
        web_scraper_class --> web_scraper_test_config
        web_scraper_class --> web_scraper_parse_html
    end

    %% Exception Classes
    subgraph "Exceptions"
        pipeline_error["Class: PipelineError<br/>Exception raised for errors in processing pipeline"]
        service_error_class["Class: ServiceError<br/>Base exception for service layer errors"]
    end

    %% Method-to-method call relationships
    main_entry -.->|"calls"| cli_main
    cli_main -.->|"creates instance"| pipeline_class
    cli_main -.->|"calls configure_subparser"| system_configure_subparser
    cli_main -.->|"calls configure_subparser"| agent_configure_subparser
    cli_main -.->|"calls configure_subparser"| discovery_configure_subparser
    cli_main -.->|"calls configure_subparser"| notes_configure_subparser
    cli_main -.->|"calls configure_subparser"| pdf_configure_subparser
    cli_main -.->|"calls configure_subparser"| rag_configure_subparser

    %% CLI to Pipeline method calls
    system_process_pdf -.->|"calls"| pipeline_process_pdf
    rag_run_rag_index -.->|"calls"| pipeline_index_knowledge_base
    rag_run_rag_search -.->|"calls"| pipeline_search_knowledge_base
    rag_run_rag_ask -.->|"calls"| pipeline_ask_knowledge_base
    rag_run_rag_stats -.->|"calls"| pipeline_get_rag_stats
    rag_run_rag_clear -.->|"calls"| pipeline_clear_rag_index
    notes_run_regenerate_all_notes -.->|"calls"| pipeline_regenerate_all_notes
    notes_run_consolidate_tags -.->|"calls"| pipeline_consolidate_and_retag_all
    discovery_run_discovery_run -.->|"calls"| discovery_service_run_discovery
    discovery_run_discovery_list -.->|"calls"| discovery_service_list_sources
    discovery_run_discovery_create -.->|"calls"| discovery_service_create_source
    discovery_run_discovery_edit -.->|"calls"| discovery_service_update_source
    discovery_run_discovery_delete -.->|"calls"| discovery_service_delete_source

    %% CLI to Service method calls
    agent_run_agent_chat -.->|"uses"| service_manager_class
    pdf_run_locate_pdf -.->|"calls"| pdf_locator_locate
    notes_run_reprocess_note -.->|"calls"| note_service_create_note

    %% System CLI command relationships
    system_run_monitor -.->|"calls"| pipeline_process_pdf
    system_process_pdf -.->|"calls"| pipeline_process_pdf

    %% Pipeline internal method calls
    pipeline_process_pdf -.->|"calls"| pipeline_ocr_convert
    pipeline_process_pdf -.->|"calls"| pipeline_analyze_content
    pipeline_process_pdf -.->|"calls"| pipeline_extract_citations
    pipeline_process_pdf -.->|"calls"| pipeline_generate_note
    pipeline_process_pdf -.->|"calls"| pipeline_index_to_rag

    %% Pipeline creates and uses ServiceManager
    pipeline_init -.->|"creates"| service_manager_class
    pipeline_init -.->|"calls"| service_manager_initialize

    %% Pipeline service delegations via ServiceManager
    pipeline_ocr_convert -.->|"uses"| service_manager_processing_prop
    pipeline_analyze_content -.->|"uses"| service_manager_processing_prop
    pipeline_extract_citations -.->|"uses"| service_manager_citation_prop
    pipeline_generate_note -.->|"uses"| service_manager_note_prop
    pipeline_index_to_rag -.->|"uses"| service_manager_rag_prop
    pipeline_consolidate_tags_only -.->|"uses"| service_manager_tag_prop
    pipeline_suggest_additional_tags -.->|"uses"| service_manager_tag_prop
    pipeline_consolidate_and_retag_all -.->|"uses"| service_manager_tag_prop
    pipeline_index_knowledge_base -.->|"uses"| service_manager_rag_prop
    pipeline_search_knowledge_base -.->|"uses"| service_manager_rag_prop
    pipeline_ask_knowledge_base -.->|"uses"| service_manager_rag_prop
    pipeline_web_search -.->|"uses"| service_manager_web_search_prop

    %% Pipeline integration with ArticleService and NoteService
    service_manager_note_prop -.->|"delegates to"| note_service_create_note
    service_manager_article_prop -.->|"delegates to"| article_service_evaluate_for_download
    service_manager_article_prop -.->|"delegates to"| article_service_evaluate_against_query

    %% ServiceManager property access
    service_manager_processing_prop -.->|"delegates to"| services_processing_ocr
    service_manager_processing_prop -.->|"delegates to"| services_processing_analyze
    service_manager_citation_prop -.->|"delegates to"| services_citation_extract
    service_manager_note_prop -.->|"delegates to"| services_note_create
    service_manager_rag_prop -.->|"delegates to"| services_rag_index
    service_manager_tag_prop -.->|"delegates to"| services_tag_consolidate
    service_manager_tag_prop -.->|"delegates to"| services_tag_suggest
    service_manager_tag_prop -.->|"delegates to"| services_tag_consolidate_and_retag
    service_manager_rag_prop -.->|"delegates to"| services_rag_index_kb
    service_manager_rag_prop -.->|"delegates to"| services_rag_search
    service_manager_rag_prop -.->|"delegates to"| services_rag_ask
    service_manager_web_search_prop -.->|"delegates to"| services_search_web

    %% ServiceManager creates service instances
    service_manager_initialize -.->|"creates"| llm_service_class
    service_manager_initialize -.->|"creates"| processing_service_class
    service_manager_initialize -.->|"creates"| citation_service_class
    service_manager_initialize -.->|"creates"| tag_service_class
    service_manager_initialize -.->|"creates"| rag_service_class
    service_manager_initialize -.->|"creates"| discovery_service_class
    service_manager_initialize -.->|"creates"| article_service_class
    service_manager_initialize -.->|"creates"| note_service_class
    service_manager_initialize -.->|"creates"| query_service_class
    service_manager_initialize -.->|"creates"| web_search_service_class
    service_manager_initialize -.->|"creates"| pdf_locator_service_class

    %% LLMService internal method relationships
    llm_service_get_llm -.->|"calls"| llm_service_get_client
    llm_service_get_structured_client -.->|"calls"| llm_service_get_client

    %% LLMService creates and uses LLM clients
    llm_service_get_client -.->|"creates and caches"| openai_client_class
    llm_service_get_client -.->|"creates and caches"| anthropic_client_class
    llm_service_get_client -.->|"creates and caches"| openrouter_client_class
    llm_service_create_prompt_template -.->|"creates"| chat_prompt_template_class
    llm_service_invoke_with_retry -.->|"uses"| openai_client_class
    llm_service_invoke_with_retry -.->|"uses"| anthropic_client_class
    llm_service_invoke_with_retry -.->|"uses"| openrouter_client_class

    %% LLMService provides different model configurations
    llm_service_get_model_config -.->|"provides config for"| processing_service_class
    llm_service_get_model_config -.->|"provides config for"| article_service_class
    llm_service_get_model_config -.->|"provides config for"| tag_service_class
    llm_service_get_model_config -.->|"provides config for"| citation_service_class

    %% ProcessingService internal method relationships
    processing_service_process_pdf_to_markdown -.->|"calls"| processing_service_ocr_convert
    processing_service_analyze_document -.->|"calls"| processing_service_analyze_content

    %% ProcessingService uses external dependencies
    processing_service_mistral_client_prop -.->|"creates"| mistral_client_class
    processing_service_llm_service_prop -.->|"creates"| llm_service_class
    processing_service_analyze_content -.->|"creates"| llm_processor_class
    processing_service_ocr_convert -.->|"fallback uses"| pypdf_reader_class

    %% ProcessingService dependency on LLMService
    processing_service_class -.->|"depends on"| llm_service_class

    %% CitationService dependencies and relationships
    citation_service_citation_processor_prop -.->|"creates"| citation_processor_class
    citation_service_pdf_locator_prop -.->|"creates"| pdf_locator_service_class
    citation_service_format_citation -.->|"uses"| citation_formatter_class
    citation_service_format_citation -.->|"uses"| citation_style_enum
    citation_service_locate_pdfs_for_citations -.->|"uses"| citation_service_pdf_locator_prop
    citation_service_locate_pdf_for_citation -.->|"uses"| citation_service_pdf_locator_prop

    %% CitationService uses LLMService through CitationProcessor
    citation_processor_class -.->|"depends on"| llm_service_class

    %% TagService dependencies and relationships
    tag_service_tag_consolidator_prop -.->|"creates"| tag_consolidator_class
    tag_service_consolidate_tags -.->|"uses"| tag_service_tag_consolidator_prop
    tag_service_suggest_tags -.->|"uses"| tag_service_tag_consolidator_prop
    tag_service_extract_all_tags -.->|"uses"| tag_service_citation_tracker_prop
    tag_service_consolidate_and_retag -.->|"calls"| tag_service_extract_all_tags
    tag_service_consolidate_and_retag -.->|"calls"| tag_service_consolidate_tags
    tag_service_consolidate_only -.->|"calls"| tag_service_extract_all_tags
    tag_service_consolidate_only -.->|"calls"| tag_service_consolidate_tags
    tag_service_suggest_additional -.->|"calls"| tag_service_extract_all_tags
    tag_service_suggest_additional -.->|"calls"| tag_service_suggest_tags

    %% TagService uses LLMService through TagConsolidator
    tag_consolidator_class -.->|"depends on"| llm_service_class
    tag_service_class -.->|"depends on"| llm_service_class

    %% RAGService dependencies and relationships
    rag_service_rag_manager_prop -.->|"creates"| rag_manager_class
    rag_service_index_file -.->|"uses"| rag_service_rag_manager_prop
    rag_service_index_directory -.->|"uses"| rag_service_rag_manager_prop
    rag_service_search -.->|"uses"| rag_service_rag_manager_prop
    rag_service_ask_question -.->|"uses"| rag_service_rag_manager_prop
    rag_service_get_statistics -.->|"uses"| rag_service_rag_manager_prop
    rag_service_clear_index -.->|"uses"| rag_service_rag_manager_prop
    rag_service_index_knowledge_base -.->|"calls"| rag_service_index_directory

    %% DiscoveryService dependencies and relationships
    discovery_service_init -.->|"creates"| arxiv_api_source_class
    discovery_service_init -.->|"creates"| pubmed_api_source_class
    discovery_service_init -.->|"creates"| web_scraper_class
    discovery_service_init -.->|"creates"| emulator_scraper_class
    discovery_service_init -.->|"depends on"| article_service_class
    discovery_service_init -.->|"creates"| pdf_locator_service_class
    discovery_service_create_source -.->|"uses"| discovery_source_class
    discovery_service_run_discovery -.->|"returns"| discovery_result_class
    discovery_service_run_discovery -.->|"uses"| arxiv_api_source_class
    discovery_service_run_discovery -.->|"uses"| pubmed_api_source_class
    discovery_service_run_discovery -.->|"uses"| web_scraper_class
    discovery_service_run_discovery -.->|"uses"| emulator_scraper_class
    discovery_service_run_discovery -.->|"processes"| scraped_article_metadata_class
    discovery_service_start_scheduler -.->|"uses threading"| discovery_service_get_schedule_status
    discovery_service_class -.->|"depends on"| article_service_class
    discovery_service_class -.->|"depends on"| pdf_locator_service_class

    %% ArticleService dependencies and relationships
    article_service_llm_service_prop -.->|"creates"| llm_service_class
    article_service_init -.->|"creates"| jinja_environment_class
    article_service_evaluate_against_query -.->|"returns"| query_evaluation_response_class
    article_service_evaluate_for_download -.->|"returns"| pre_download_evaluation_response_class
    article_service_evaluate_against_query -.->|"processes"| research_query_class
    article_service_evaluate_against_query -.->|"processes"| analysis_response_class
    article_service_evaluate_for_download -.->|"processes"| scraped_article_metadata_class
    article_service_evaluate_for_download -.->|"calls"| article_service_evaluate_against_query
    article_service_class -.->|"depends on"| llm_service_class

    %% NoteService dependencies and relationships
    note_service_init -.->|"creates"| jinja_environment_class
    note_service_create_note -.->|"processes"| analysis_response_class
    note_service_create_note -.->|"processes"| citation_class
    note_service_create_note -.->|"uses"| obsidian_template_class
    note_service_create_basic_note -.->|"creates basic notes"| obsidian_template_class

    %% QueryService dependencies and relationships
    query_service_llm_prop -.->|"creates"| openrouter_client_class
    query_service_init -.->|"creates"| jinja_environment_class
    query_service_create_query -.->|"processes"| research_query_schema_class
    query_service_create_query -.->|"persists to"| json_storage_class
    query_service_get_query -.->|"loads from"| json_storage_class
    query_service_get_query -.->|"returns"| research_query_schema_class
    query_service_evaluate_article -.->|"uses"| query_evaluation_template_class
    query_service_evaluate_article -.->|"returns"| query_evaluation_response_class
    query_service_evaluate_article -.->|"calls"| query_service_get_query
    query_service_get_all_queries -.->|"calls"| query_service_list_queries
    query_service_get_all_queries -.->|"calls"| query_service_get_query
    query_service_update_query -.->|"calls"| query_service_get_query
    query_service_update_query -.->|"calls"| query_service_create_query

    %% QueryService integration with other services
    article_service_class -.->|"uses queries from"| query_service_class
    discovery_service_class -.->|"uses queries from"| query_service_class

    %% Service inheritance relationships (all services inherit from BaseService)
    llm_service_class -.->|"inherits from"| base_service_class
    llm_router_class -.->|"inherits from"| base_service_class
    processing_service_class -.->|"inherits from"| base_service_class
    citation_service_class -.->|"inherits from"| base_service_class
    tag_service_class -.->|"inherits from"| base_service_class
    rag_service_class -.->|"inherits from"| base_service_class
    discovery_service_class -.->|"inherits from"| base_service_class
    article_service_class -.->|"inherits from"| base_service_class
    note_service_class -.->|"inherits from"| base_service_class
    query_service_class -.->|"inherits from"| base_service_class
    web_search_service_class -.->|"inherits from"| base_service_class
    pdf_locator_service_class -.->|"inherits from"| base_service_class

    %% Service dependencies (composition relationships)
    processing_service_class -.->|"depends on"| llm_service_class
    article_service_class -.->|"depends on"| llm_service_class
    tag_service_class -.->|"depends on"| llm_service_class

    %% PDF Locator Service method calls
    pdf_locator_locate -.->|"calls"| pdf_locator_from_crossref
    pdf_locator_locate -.->|"calls"| pdf_locator_from_unpaywall
    pdf_locator_locate -.->|"calls"| pdf_locator_from_arxiv
    pdf_locator_locate -.->|"calls"| pdf_locator_from_semanticscholar
    pdf_locator_locate -.->|"calls"| pdf_locator_from_doi_head
    pdf_locator_from_crossref -.->|"calls"| pdf_locator_get_json
    pdf_locator_from_unpaywall -.->|"calls"| pdf_locator_get_json
    pdf_locator_from_semanticscholar -.->|"calls"| pdf_locator_get_json
    pdf_locator_from_arxiv -.->|"calls"| pdf_locator_doi_to_arxiv

    %% Web Search Service method calls
    web_search_search -.->|"calls"| web_search_get_client
    web_search_get_client -.->|"creates"| serper_client
    web_search_get_client -.->|"creates"| duckduckgo_client
    web_search_get_client -.->|"creates"| scrape_search_client

    %% PDF Locator API connections
    pdf_locator_from_crossref -.->|"calls"| crossref_api
    pdf_locator_from_unpaywall -.->|"calls"| unpaywall_api
    pdf_locator_from_arxiv -.->|"uses"| arxiv_api
    pdf_locator_from_semanticscholar -.->|"calls"| semanticscholar_api
    pdf_locator_from_doi_head -.->|"calls"| doi_resolver

    %% Exception usage relationships
    base_service_validate_input -.->|"raises"| service_error_class

    %% Service method implementations
    services_processing_ocr -.->|"implemented by"| processing_service_class
    services_processing_analyze -.->|"implemented by"| processing_service_class
    services_citation_extract -.->|"implemented by"| citation_service_class
    services_note_create -.->|"implemented by"| note_service_class
    services_rag_index -.->|"implemented by"| rag_service_class
    services_tag_consolidate -.->|"implemented by"| tag_service_class
    services_tag_suggest -.->|"implemented by"| tag_service_class
    services_tag_consolidate_and_retag -.->|"implemented by"| tag_service_class
    services_rag_index_kb -.->|"implemented by"| rag_service_class
    services_rag_search -.->|"implemented by"| rag_service_class
    services_rag_ask -.->|"implemented by"| rag_service_class
    services_search_web -.->|"implemented by"| web_search_service_class

    %% Service Manager Core
    subgraph "File: src/thoth/services/service_manager.py"
        service_manager_class["Class: ServiceManager<br/>Central manager for all Thoth services"]
        service_manager_init["Method: __init__(config) -> None<br/>Initialize ServiceManager with optional config"]
        service_manager_initialize["Method: initialize() -> None<br/>Initialize all services with proper dependencies"]
        service_manager_llm_prop["Property: llm -> LLMService<br/>Get the LLM service"]
        service_manager_processing_prop["Property: processing -> ProcessingService<br/>Get the processing service"]
        service_manager_article_prop["Property: article -> ArticleService<br/>Get the article service"]
        service_manager_note_prop["Property: note -> NoteService<br/>Get the note service"]
        service_manager_query_prop["Property: query -> QueryService<br/>Get the query service"]
        service_manager_discovery_prop["Property: discovery -> DiscoveryService<br/>Get the discovery service"]
        service_manager_rag_prop["Property: rag -> RAGService<br/>Get the RAG service"]
        service_manager_web_search_prop["Property: web_search -> WebSearchService<br/>Get the web search service"]
        service_manager_citation_prop["Property: citation -> CitationService<br/>Get the citation service"]
        service_manager_tag_prop["Property: tag -> TagService<br/>Get the tag service"]
        service_manager_pdf_locator_prop["Property: pdf_locator -> PdfLocatorService<br/>Get the PDF locator service"]
        service_manager_get_service["Method: get_service(name) -> BaseService<br/>Get service by name"]
        service_manager_set_citation_tracker["Method: set_citation_tracker(citation_tracker) -> None<br/>Set citation tracker for services"]
        service_manager_set_filter_function["Method: set_filter_function(filter_func) -> None<br/>Set filter function for discovery service"]
        service_manager_get_all_services["Method: get_all_services() -> dict[str, BaseService]<br/>Get all initialized services"]
        service_manager_ensure_initialized["Method: _ensure_initialized() -> None<br/>Private method to ensure initialization"]
        service_manager_shutdown["Method: shutdown() -> None<br/>Shutdown all services and clean up resources"]

        service_manager_class --> service_manager_init
        service_manager_class --> service_manager_initialize
        service_manager_class --> service_manager_llm_prop
        service_manager_class --> service_manager_processing_prop
        service_manager_class --> service_manager_article_prop
        service_manager_class --> service_manager_note_prop
        service_manager_class --> service_manager_query_prop
        service_manager_class --> service_manager_discovery_prop
        service_manager_class --> service_manager_rag_prop
        service_manager_class --> service_manager_web_search_prop
        service_manager_class --> service_manager_citation_prop
        service_manager_class --> service_manager_tag_prop
        service_manager_class --> service_manager_pdf_locator_prop
        service_manager_class --> service_manager_get_service
        service_manager_class --> service_manager_set_citation_tracker
        service_manager_class --> service_manager_set_filter_function
        service_manager_class --> service_manager_get_all_services
        service_manager_class --> service_manager_ensure_initialized
        service_manager_class --> service_manager_shutdown
    end

    %% Base Service Architecture
    subgraph "File: src/thoth/services/base.py"
        base_service_class["Class: BaseService (ABC)<br/>Abstract base class for all Thoth services"]
        base_service_init["Method: __init__(config) -> None<br/>Initialize base service with config and logger"]
        base_service_config_prop["Property: config -> ThothConfig<br/>Get the configuration object"]
        base_service_logger_prop["Property: logger<br/>Get the logger instance for this service"]
        base_service_initialize["Method: initialize() -> None (abstract)<br/>Initialize the service - must be implemented by subclasses"]
        base_service_handle_error["Method: handle_error(error, context) -> str<br/>Handle error with consistent logging and formatting"]
        base_service_validate_input["Method: validate_input(**kwargs) -> None<br/>Validate input parameters, raises ServiceError if validation fails"]
        base_service_log_operation["Method: log_operation(operation, **details) -> None<br/>Log a service operation with details"]

        base_service_class --> base_service_init
        base_service_class --> base_service_config_prop
        base_service_class --> base_service_logger_prop
        base_service_class --> base_service_initialize
        base_service_class --> base_service_handle_error
        base_service_class --> base_service_validate_input
        base_service_class --> base_service_log_operation
    end

    %% LLM Processor Implementation
    subgraph "File: src/thoth/analyze/llm_processor.py"
        llm_error_class["Class: LLMError<br/>Exception raised for errors in LLM processing"]
        llm_processor_class["Class: LLMProcessor<br/>LLM Processor for analyzing content using LangChain and LangGraph"]
        llm_processor_init["Method: __init__(llm_service, model, prompts_dir, max_output_tokens, max_context_length, chunk_size, chunk_overlap, model_kwargs, refine_threshold_multiplier, map_reduce_threshold_multiplier) -> None<br/>Initialize LLMProcessor with configuration and build workflow"]
        llm_processor_count_tokens["Method: _count_tokens(text: str) -> int<br/>Count tokens using tiktoken encoder (simplified division by 4)"]
        llm_processor_create_prompt["Method: _create_prompt_from_template(template_name: str) -> ChatPromptTemplate<br/>Create ChatPromptTemplate from Jinja2 template file"]
        llm_processor_load_content["Method: _load_content(state: AnalysisState) -> AnalysisState<br/>LangGraph node: Load content from markdown file path or direct string"]
        llm_processor_determine_strategy["Method: _determine_strategy(state: AnalysisState) -> AnalysisState<br/>LangGraph node: Determine processing strategy based on token count"]
        llm_processor_split_content["Method: _split_content(state: AnalysisState) -> AnalysisState<br/>LangGraph node: Split content into chunks using MarkdownTextSplitter"]
        llm_processor_analyze_direct["Method: _analyze_direct(state: AnalysisState) -> AnalysisState<br/>LangGraph node: Analyze content directly for smaller documents"]
        llm_processor_analyze_map_reduce["Method: _analyze_map_reduce(state: AnalysisState) -> AnalysisState<br/>LangGraph node: Map-reduce analysis for medium-sized documents"]
        llm_processor_analyze_refine["Method: _analyze_refine(state: AnalysisState) -> AnalysisState<br/>LangGraph node: Refine analysis for large documents"]
        llm_processor_decide_next_step["Method: _decide_next_step(state: AnalysisState) -> Literal['split_content', 'analyze_direct']<br/>Conditional edge: Decide whether to split content or analyze directly"]
        llm_processor_decide_analysis_path["Method: _decide_analysis_path(state: AnalysisState) -> Literal['analyze_map_reduce', 'analyze_refine']<br/>Conditional edge: Decide between map-reduce or refine strategy"]
        llm_processor_build_graph["Method: _build_graph() -> Runnable<br/>Build the LangGraph workflow with nodes and edges"]
        llm_processor_analyze_content["Method: analyze_content(markdown_path: Path | str, force_processing_strategy=None, config=None) -> AnalysisResponse<br/>Main public method to analyze content using LangGraph workflow"]

        llm_processor_class --> llm_processor_init
        llm_processor_class --> llm_processor_count_tokens
        llm_processor_class --> llm_processor_create_prompt
        llm_processor_class --> llm_processor_load_content
        llm_processor_class --> llm_processor_determine_strategy
        llm_processor_class --> llm_processor_split_content
        llm_processor_class --> llm_processor_analyze_direct
        llm_processor_class --> llm_processor_analyze_map_reduce
        llm_processor_class --> llm_processor_analyze_refine
        llm_processor_class --> llm_processor_decide_next_step
        llm_processor_class --> llm_processor_decide_analysis_path
        llm_processor_class --> llm_processor_build_graph
        llm_processor_class --> llm_processor_analyze_content
    end

    %% LLMProcessor dependencies and method calls
    llm_processor_init -.->|"calls"| llm_service_get_client
    llm_processor_init -.->|"calls"| llm_processor_create_prompt
    llm_processor_init -.->|"calls"| llm_processor_build_graph
    llm_processor_analyze_content -.->|"invokes"| llm_processor_build_graph
    llm_processor_determine_strategy -.->|"calls"| llm_processor_count_tokens
    llm_processor_split_content -.->|"uses"| llm_processor_count_tokens
    llm_processor_analyze_direct -.->|"uses"| llm_service_class
    llm_processor_analyze_map_reduce -.->|"uses"| llm_service_class
    llm_processor_analyze_refine -.->|"uses"| llm_service_class

    %% LLMProcessor usage by ProcessingService
    processing_service_analyze_content -.->|"creates and uses"| llm_processor_class

    %% Style for different node types with improved contrast
    classDef functionNode fill:#1565c0,stroke:#0d47a1,stroke-width:2px,color:#ffffff
    classDef classNode fill:#6a1b9a,stroke:#4a148c,stroke-width:2px,color:#ffffff
    classDef methodNode fill:#2e7d32,stroke:#1b5e20,stroke-width:2px,color:#ffffff
    classDef serviceNode fill:#ef6c00,stroke:#e65100,stroke-width:2px,color:#ffffff
    classDef exceptionNode fill:#c62828,stroke:#b71c1c,stroke-width:2px,color:#ffffff
    classDef discoveryNode fill:#00838f,stroke:#006064,stroke-width:2px,color:#ffffff
    classDef pluginNode fill:#8e24aa,stroke:#6a1b9a,stroke-width:2px,color:#ffffff
    classDef schemaNode fill:#795548,stroke:#5d4037,stroke-width:2px,color:#ffffff

    class main_entry,cli_main,cli_main_create_parser,cli_main_create_pipeline,cli_main_parse_args,cli_main_execute_func,system_run_monitor,system_process_pdf,system_run_api_server,system_run_scrape_filter_test,system_configure_subparser,system_start_obsidian_server,system_create_pdf_monitor,system_monitor_start,system_create_sample_queries,system_filter_process_article,agent_configure_subparser,agent_run_agent_chat,agent_create_research_assistant,agent_chat_loop,discovery_configure_subparser,discovery_run_discovery_command,discovery_run_discovery_run,discovery_run_discovery_list,discovery_run_discovery_show,discovery_run_discovery_create,discovery_run_discovery_edit,discovery_run_discovery_delete,discovery_run_discovery_scheduler,discovery_run_discovery_scheduler_stop,notes_configure_subparser,notes_run_reprocess_note,notes_run_regenerate_all_notes,notes_run_consolidate_tags,notes_get_article_data,notes_create_note,notes_update_file_paths,notes_regenerate_all,notes_consolidate_retag,pdf_configure_subparser,pdf_run_locate_pdf,pdf_run_pdf_stats,pdf_run_test_source,pdf_process_all_articles,pdf_create_service_manager,pdf_get_pdf_locator,pdf_locate_call,rag_configure_subparser,rag_run_rag_command,rag_run_rag_index,rag_run_rag_search,rag_run_rag_ask,rag_run_rag_stats,rag_run_rag_clear,run_chrome_extension_server_func,run_emulator_func,download_pdf_func,create_research_assistant_func functionNode
    class pipeline_class,service_manager_class,llm_service_class,llm_router_class,processing_service_class,citation_service_class,tag_service_class,rag_service_class,discovery_service_class,article_service_class,note_service_class,query_service_class,web_search_service_class,pdf_locator_service_class,pdf_location_class,base_service_class,openai_client_class,anthropic_client_class,openrouter_client_class,chat_prompt_template_class,mistral_client_class,llm_processor_class,pypdf_reader_class,citation_processor_class,citation_formatter_class,citation_style_enum,tag_consolidator_class,rag_manager_class,discovery_result_class,discovery_source_class,schedule_config_class,scraped_article_metadata_class,query_evaluation_response_class,pre_download_evaluation_response_class,research_query_class,analysis_response_class,jinja_environment_class,citation_class,obsidian_template_class,research_query_schema_class,query_evaluation_template_class,json_storage_class,serper_client,duckduckgo_client,scrape_search_client,crossref_api,unpaywall_api,arxiv_api,semanticscholar_api,doi_resolver,get_openrouter_models_func,research_assistant_class,citation_reference_class,citation_graph_class,embedding_manager_class,rag_manager_class,vector_store_manager_class,pdf_tracker_class,pdf_handler_class,pdf_monitor_class,token_usage_tracker_class,base_thoth_tool_class,tool_registry_class classNode
    class discovery_scheduler_class,arxiv_client_discovery_class,base_api_source_class,chrome_extension_server_class,web_emulator_recorder_class,arxiv_api_source_class,pubmed_api_source_class,web_scraper_class,emulator_scraper_class discoveryNode
    class thoth_plugin_class,chat_modal_class,thoth_setting_tab_class,thoth_settings_interface,chat_message_interface pluginNode
    class analysis_response_schema,analysis_state_schema,citation_schema,arxiv_paper_schema,citation_extraction_schema,discovery_source_schema,scraped_article_metadata_schema,research_query_schema,query_evaluation_response_schema,search_result_schema_class,search_response_schema,tag_consolidation_response_schema,tag_suggestion_response_schema schemaNode
    class pipeline_init,pipeline_process_pdf,pipeline_ocr_convert,pipeline_analyze_content,pipeline_extract_citations,pipeline_generate_note,pipeline_index_to_rag,pipeline_regenerate_all_notes,pipeline_consolidate_tags_only,pipeline_suggest_additional_tags,pipeline_consolidate_and_retag_all,pipeline_index_knowledge_base,pipeline_search_knowledge_base,pipeline_ask_knowledge_base,pipeline_web_search,pipeline_clear_rag_index,pipeline_get_rag_stats,service_manager_init,service_manager_initialize,service_manager_get_service,service_manager_set_citation_tracker,service_manager_set_filter_function,service_manager_get_all_services,service_manager_ensure_initialized,service_manager_shutdown,base_service_init,base_service_initialize,base_service_handle_error,base_service_validate_input,base_service_log_operation,llm_service_init,llm_service_initialize,llm_service_get_client,llm_service_get_llm,llm_service_get_structured_client,llm_service_create_prompt_template,llm_service_invoke_with_retry,llm_service_get_model_config,llm_service_clear_cache,llm_router_init,llm_router_initialize,llm_router_filter_models,llm_router_select_model,llm_router_get_models,processing_service_init,processing_service_initialize,processing_service_ocr_convert,processing_service_process_pdf_to_markdown,processing_service_analyze_content,processing_service_analyze_document,processing_service_extract_metadata,processing_service_validate_analysis,processing_service_get_processing_stats,citation_service_init,citation_service_initialize,citation_service_extract_citations,citation_service_format_citation,citation_service_track_citations,citation_service_get_citation_network,citation_service_search_articles,citation_service_get_article_data,citation_service_update_article_paths,citation_service_locate_pdfs_for_citations,citation_service_locate_pdf_for_citation,tag_service_init,tag_service_initialize,tag_service_extract_all_tags,tag_service_consolidate_tags,tag_service_suggest_tags,tag_service_consolidate_and_retag,tag_service_consolidate_only,tag_service_suggest_additional,rag_service_init,rag_service_initialize,rag_service_index_file,rag_service_index_directory,rag_service_search,rag_service_ask_question,rag_service_get_statistics,rag_service_clear_index,rag_service_index_knowledge_base,discovery_service_init,discovery_service_initialize,discovery_service_create_source,discovery_service_get_source,discovery_service_list_sources,discovery_service_update_source,discovery_service_delete_source,discovery_service_run_discovery,discovery_service_get_statistics,discovery_service_start_scheduler,discovery_service_stop_scheduler,discovery_service_get_schedule_status,article_service_init,article_service_initialize,article_service_evaluate_against_query,article_service_evaluate_for_download,article_service_check_relevance,note_service_init,note_service_initialize,note_service_create_note,note_service_create_basic_note,note_service_get_note_statistics,query_service_init,query_service_initialize,query_service_create_query,query_service_get_query,query_service_list_queries,query_service_delete_query,query_service_evaluate_article,query_service_get_all_queries,query_service_update_query,pdf_locator_init,pdf_locator_initialize,pdf_locator_locate,pdf_locator_get_json,pdf_locator_from_crossref,pdf_locator_from_unpaywall,pdf_locator_from_arxiv,pdf_locator_from_semanticscholar,pdf_locator_from_doi_head,pdf_locator_doi_to_arxiv,pdf_locator_extract_license,web_search_init,web_search_initialize,web_search_get_client,web_search_search,discovery_scheduler_init,discovery_scheduler_start,discovery_scheduler_stop,discovery_scheduler_add_source,discovery_scheduler_remove_source,discovery_scheduler_update_schedule,discovery_scheduler_get_status,discovery_scheduler_run_now,discovery_scheduler_loop,discovery_scheduler_check_run,discovery_scheduler_calc_next,discovery_scheduler_load_state,discovery_scheduler_save_state,discovery_scheduler_sync,discovery_scheduler_next_runs,arxiv_client_discovery_init,arxiv_client_discovery_make_request,arxiv_client_discovery_search,arxiv_client_discovery_get_by_id,arxiv_client_discovery_parse_response,arxiv_client_discovery_lookup,arxiv_client_discovery_update_citation,arxiv_client_discovery_citation_count,arxiv_client_discovery_close,base_api_source_search,arxiv_api_source_init,arxiv_api_source_search,arxiv_api_source_rate_limit,arxiv_api_source_parse_entry,pubmed_api_source_init,pubmed_api_source_search,pubmed_api_source_search_pmids,pubmed_api_source_fetch_details,pubmed_api_source_fetch_batch,pubmed_api_source_parse_article,pubmed_api_source_rate_limit,chrome_extension_server_init,chrome_extension_server_start,chrome_extension_server_handle_client,chrome_extension_server_process_message,chrome_extension_server_test_selectors,chrome_extension_server_save_config,chrome_extension_server_load_config,chrome_extension_server_list_configs,chrome_extension_server_test_scrape,chrome_extension_server_convert_config,web_emulator_recorder_init,web_emulator_recorder_start,web_emulator_recorder_stop,web_emulator_recorder_save,web_emulator_recorder_load,emulator_scraper_init,emulator_scraper_scrape,web_scraper_init,web_scraper_scrape,web_scraper_apply_config,web_scraper_scrape_page,web_scraper_find_containers,web_scraper_extract_metadata,web_scraper_extract_field,web_scraper_apply_transform,web_scraper_normalize_authors,web_scraper_get_next_page,web_scraper_apply_rate_limit,web_scraper_test_config,web_scraper_parse_html methodNode
    class service_manager_llm_prop,service_manager_processing_prop,service_manager_article_prop,service_manager_note_prop,service_manager_query_prop,service_manager_discovery_prop,service_manager_rag_prop,service_manager_web_search_prop,service_manager_citation_prop,service_manager_tag_prop,service_manager_pdf_locator_prop,base_service_config_prop,base_service_logger_prop,processing_service_mistral_client_prop,processing_service_llm_service_prop,citation_service_citation_processor_prop,citation_service_pdf_locator_prop,tag_service_citation_tracker_prop,tag_service_tag_consolidator_prop,rag_service_rag_manager_prop,article_service_llm_service_prop,query_service_llm_prop serviceNode
    class services_processing_ocr,services_processing_analyze,services_citation_extract,services_note_create,services_rag_index,services_tag_consolidate,services_tag_suggest,services_tag_consolidate_and_retag,services_rag_index_kb,services_rag_search,services_rag_ask,services_search_web serviceNode
    class pipeline_error,service_error_class,discovery_scheduler_error_class,api_source_error_class,web_scraper_error_class exceptionNode

    %% LLM Router Service Implementation
    subgraph "File: src/thoth/services/llm_router.py"
        llm_router_class["Class: LLMRouter<br/>Service for dynamically selecting the best model for a given query"]
        llm_router_init["Method: __init__(config, llm_service) -> None<br/>Initialize the LLMRouter with config and LLM service"]
        llm_router_initialize["Method: initialize() -> None<br/>Initialize the router"]
        llm_router_filter_models["Method: _filter_models_by_capability() -> list[dict]<br/>Filter candidate models based on their capabilities"]
        llm_router_select_model["Method: select_model(query) -> str<br/>Select the best model for a given query"]
        llm_router_get_models["Method: get_models() -> list[dict]<br/>Gets the list of available models from OpenRouter"]

        llm_router_class --> llm_router_init
        llm_router_class --> llm_router_initialize
        llm_router_class --> llm_router_filter_models
        llm_router_class --> llm_router_select_model
        llm_router_class --> llm_router_get_models
    end

    %% LLMRouter dependencies and relationships
    llm_router_init -.->|"creates"| openrouter_client_class
    llm_router_init -.->|"creates"| llm_service_class
    llm_router_filter_models -.->|"calls"| get_openrouter_models_func
    llm_router_select_model -.->|"calls"| llm_router_filter_models
    llm_router_select_model -.->|"calls"| openrouter_invoke
    llm_router_get_models -.->|"calls"| get_openrouter_models_func

    %% LLMRouter inherits from BaseService
    llm_router_class -.->|"inherits from"| base_service_class

    %% LLMProcessor dependencies and method calls
    llm_processor_init -.->|"calls"| llm_service_get_client
    llm_processor_init -.->|"calls"| llm_processor_create_prompt
    llm_processor_init -.->|"calls"| llm_processor_build_graph
    llm_processor_analyze_content -.->|"invokes LangGraph"| llm_processor_build_graph
    llm_processor_determine_strategy -.->|"calls"| llm_processor_count_tokens
    llm_processor_split_content -.->|"uses"| llm_processor_count_tokens
    llm_processor_analyze_direct -.->|"uses"| llm_service_class
    llm_processor_analyze_map_reduce -.->|"uses"| llm_service_class
    llm_processor_analyze_refine -.->|"uses"| llm_service_class

    %% LLMProcessor usage by ProcessingService
    processing_service_analyze_content -.->|"creates and uses"| llm_processor_class

    %% External LLM Router Dependencies
    subgraph "LLM Router External Dependencies"
        get_openrouter_models_func["Function: get_openrouter_models<br/>Get available models from OpenRouter"]
        openrouter_invoke["Method: OpenRouterClient.invoke<br/>Invoke OpenRouter with prompt"]
    end

    %% LLM Processor Implementation
    subgraph "File: src/thoth/analyze/llm_processor.py"
        llm_error_class["Class: LLMError<br/>Exception raised for errors in LLM processing"]
        llm_processor_class["Class: LLMProcessor<br/>LLM Processor for analyzing content using LangChain and LangGraph"]
        llm_processor_init["Method: __init__(llm_service, model, prompts_dir, max_output_tokens, max_context_length, chunk_size, chunk_overlap, model_kwargs, refine_threshold_multiplier, map_reduce_threshold_multiplier) -> None<br/>Initialize LLMProcessor with configuration and build workflow"]
        llm_processor_count_tokens["Method: _count_tokens(text: str) -> int<br/>Count tokens using tiktoken encoder (simplified division by 4)"]
        llm_processor_create_prompt["Method: _create_prompt_from_template(template_name: str) -> ChatPromptTemplate<br/>Create ChatPromptTemplate from Jinja2 template file"]
        llm_processor_load_content["Method: _load_content(state: AnalysisState) -> AnalysisState<br/>LangGraph node: Load content from markdown file path or direct string"]
        llm_processor_determine_strategy["Method: _determine_strategy(state: AnalysisState) -> AnalysisState<br/>LangGraph node: Determine processing strategy based on token count"]
        llm_processor_split_content["Method: _split_content(state: AnalysisState) -> AnalysisState<br/>LangGraph node: Split content into chunks using MarkdownTextSplitter"]
        llm_processor_analyze_direct["Method: _analyze_direct(state: AnalysisState) -> AnalysisState<br/>LangGraph node: Analyze content directly for smaller documents"]
        llm_processor_analyze_map_reduce["Method: _analyze_map_reduce(state: AnalysisState) -> AnalysisState<br/>LangGraph node: Map-reduce analysis for medium-sized documents"]
        llm_processor_analyze_refine["Method: _analyze_refine(state: AnalysisState) -> AnalysisState<br/>LangGraph node: Refine analysis for large documents"]
        llm_processor_decide_next_step["Method: _decide_next_step(state: AnalysisState) -> Literal['split_content', 'analyze_direct']<br/>Conditional edge: Decide whether to split content or analyze directly"]
        llm_processor_decide_analysis_path["Method: _decide_analysis_path(state: AnalysisState) -> Literal['analyze_map_reduce', 'analyze_refine']<br/>Conditional edge: Decide between map-reduce or refine strategy"]
        llm_processor_build_graph["Method: _build_graph() -> Runnable<br/>Build the LangGraph workflow with nodes and edges"]
        llm_processor_analyze_content["Method: analyze_content(markdown_path: Path | str, force_processing_strategy=None, config=None) -> AnalysisResponse<br/>Main public method to analyze content using LangGraph workflow"]

        llm_processor_class --> llm_processor_init
        llm_processor_class --> llm_processor_count_tokens
        llm_processor_class --> llm_processor_create_prompt
        llm_processor_class --> llm_processor_load_content
        llm_processor_class --> llm_processor_determine_strategy
        llm_processor_class --> llm_processor_split_content
        llm_processor_class --> llm_processor_analyze_direct
        llm_processor_class --> llm_processor_analyze_map_reduce
        llm_processor_class --> llm_processor_analyze_refine
        llm_processor_class --> llm_processor_decide_next_step
        llm_processor_class --> llm_processor_decide_analysis_path
        llm_processor_class --> llm_processor_build_graph
        llm_processor_class --> llm_processor_analyze_content
    end

    %% PDF Locator External Dependencies
    subgraph "PDF Locator External Dependencies"
        crossref_api["API: Crossref Works API<br/>https://api.crossref.org/works/{doi}"]
        unpaywall_api["API: Unpaywall API<br/>https://api.unpaywall.org/v2/{doi}"]
        arxiv_api["API: arXiv PDF<br/>https://arxiv.org/pdf/{id}.pdf"]
        semanticscholar_api["API: Semantic Scholar<br/>https://api.semanticscholar.org/graph/v1/paper/DOI:{doi}"]
        doi_resolver["Service: DOI Content Negotiation<br/>https://doi.org/{doi}"]
    end

    %% Web Search External Dependencies
    subgraph "Web Search External Dependencies"
        serper_client["Class: SerperClient<br/>Serper.dev search API client"]
        duckduckgo_client["Class: DuckDuckGoClient<br/>DuckDuckGo search client"]
        scrape_search_client["Class: ScrapeSearchClient<br/>Web scraping search client"]
    end

    %% Tag Consolidator Implementation
    subgraph "File: src/thoth/analyze/tag_consolidator.py"
        tag_consolidator_error_class["Class: TagConsolidatorError<br/>Exception raised for errors in tag consolidation process"]
        tag_consolidator_class["Class: TagConsolidator<br/>Consolidates existing tags and suggests additional relevant tags"]
        tag_consolidator_init["Method: __init__(llm_service: LLMService, prompts_dir: str | Path, config: ThothConfig, model_kwargs: dict[str, Any] | None = None) -> None<br/>Initialize TagConsolidator with LLM service and configuration"]
        tag_consolidator_create_prompt["Method: _create_prompt_from_template(template_name: str, loader: Environment) -> ChatPromptTemplate<br/>Create ChatPromptTemplate from Jinja2 template file"]
        tag_consolidator_extract_tags["Method: extract_all_tags_from_graph(citation_tracker: CitationGraph) -> list[str]<br/>Extract all unique tags from all articles in the citation graph"]
        tag_consolidator_consolidate_tags["Method: consolidate_tags(existing_tags: list[str]) -> TagConsolidationResponse<br/>Consolidate similar tags using two-step LLM analysis approach"]
        tag_consolidator_suggest_tags["Method: suggest_additional_tags(title: str, abstract: str, current_tags: list[str], available_tags: list[str]) -> TagSuggestionResponse<br/>Suggest additional relevant tags for an article based on its abstract"]
        tag_consolidator_consolidate_retag_all["Method: consolidate_and_retag_all_articles(citation_tracker: CitationGraph) -> dict[str, Any]<br/>Perform complete tag consolidation and re-tagging for all articles"]

        tag_consolidator_class --> tag_consolidator_init
        tag_consolidator_class --> tag_consolidator_create_prompt
        tag_consolidator_class --> tag_consolidator_extract_tags
        tag_consolidator_class --> tag_consolidator_consolidate_tags
        tag_consolidator_class --> tag_consolidator_suggest_tags
        tag_consolidator_class --> tag_consolidator_consolidate_retag_all
    end

    %% TagConsolidator dependencies and method calls
    tag_consolidator_init -.->|"calls"| llm_service_get_client
    tag_consolidator_init -.->|"calls"| tag_consolidator_create_prompt
    tag_consolidator_consolidate_tags -.->|"uses LLM chains"| llm_service_class
    tag_consolidator_suggest_tags -.->|"uses LLM chains"| llm_service_class
    tag_consolidator_consolidate_retag_all -.->|"calls"| tag_consolidator_extract_tags
    tag_consolidator_consolidate_retag_all -.->|"calls"| tag_consolidator_consolidate_tags
    tag_consolidator_consolidate_retag_all -.->|"calls"| tag_consolidator_suggest_tags

    %% TagConsolidator usage by TagService
    tag_service_tag_consolidator_prop -.->|"creates and uses"| tag_consolidator_class

    %% Citation Processor Implementation
    subgraph "File: src/thoth/analyze/citations/citations.py"
        citation_state_class["Class: CitationState (TypedDict)<br/>State management for citation processing workflow"]
        citation_processor_error_class["Class: CitationProcessorError<br/>Exception raised for errors in citation processing"]
        citation_processor_class["Class: CitationProcessor<br/>Processes citations from academic documents using LangGraph"]
        citation_processor_init["Method: __init__(llm, config, prompts_dir: Path | None = None) -> None<br/>Initialize CitationProcessor with LLM, config and prompts"]
        citation_processor_pdf_locator_prop["Property: pdf_locator -> PdfLocatorService<br/>Get or create PDF locator service instance"]
        citation_processor_create_prompt["Method: _create_prompt_from_template(template_name: str) -> ChatPromptTemplate<br/>Create ChatPromptTemplate from Jinja2 template file"]
        citation_processor_extract_citations["Method: extract_citations(markdown_path: Path) -> list[Citation]<br/>Main entry point for citation extraction process"]
        citation_processor_extract_doc_citation["Method: _extract_document_citation(content: str) -> Citation | None<br/>Extract citation for the document itself"]
        citation_processor_extract_refs_section["Method: _extract_references_section(content: str) -> str<br/>Extract references section text from document"]
        citation_processor_clean_refs_section["Method: _clean_references_section(references_section: str) -> str<br/>Clean references section text using LLM"]
        citation_processor_split_refs["Method: _split_references_to_raw_citations(cleaned_references_section: str) -> list[str]<br/>Split cleaned references into individual citation strings"]
        citation_processor_extract_single["Method: _extract_structured_citations_single(raw_citations: list[str]) -> list[Citation]<br/>Extract structured citations individually for robustness"]
        citation_processor_extract_batch["Method: _extract_structured_citations_batch(raw_citations: list[str]) -> list[Citation]<br/>Extract structured citations in batches for efficiency"]
        citation_processor_parse_response["Method: _parse_citation_response(response: Any) -> list[Citation] | None<br/>Parse LLM response from various formats"]
        citation_processor_process_batch["Method: _process_citation_batch(batch: list[str], all_citations: list) -> bool<br/>Process a single batch of citations"]
        citation_processor_enhance_external["Method: _enhance_citations_with_external_services(citations: list[Citation]) -> list[Citation]<br/>Enhance citations with external APIs including PDF location"]
        citation_processor_process_document["Method: process_document(markdown_path: Path | str, config: RunnableConfig | None = None) -> list[Citation]<br/>Process document using LangGraph workflow"]
        citation_processor_build_graph["Method: _build_graph() -> Runnable<br/>Build LangGraph workflow for citation processing"]

        citation_processor_class --> citation_processor_init
        citation_processor_class --> citation_processor_pdf_locator_prop
        citation_processor_class --> citation_processor_create_prompt
        citation_processor_class --> citation_processor_extract_citations
        citation_processor_class --> citation_processor_extract_doc_citation
        citation_processor_class --> citation_processor_extract_refs_section
        citation_processor_class --> citation_processor_clean_refs_section
        citation_processor_class --> citation_processor_split_refs
        citation_processor_class --> citation_processor_extract_single
        citation_processor_class --> citation_processor_extract_batch
        citation_processor_class --> citation_processor_parse_response
        citation_processor_class --> citation_processor_process_batch
        citation_processor_class --> citation_processor_enhance_external
        citation_processor_class --> citation_processor_process_document
                 citation_processor_class --> citation_processor_build_graph
    end

    %% CitationProcessor dependencies and method calls
    citation_processor_init -.->|"creates"| citation_enhancer_class
    citation_processor_init -.->|"calls"| citation_processor_create_prompt
    citation_processor_init -.->|"creates"| reference_extractor_class
    citation_processor_pdf_locator_prop -.->|"creates"| pdf_locator_service_class
    citation_processor_extract_citations -.->|"calls"| citation_processor_extract_doc_citation
    citation_processor_extract_citations -.->|"calls"| citation_processor_extract_refs_section
    citation_processor_extract_citations -.->|"calls"| citation_processor_clean_refs_section
    citation_processor_extract_citations -.->|"calls"| citation_processor_split_refs
    citation_processor_extract_citations -.->|"calls"| citation_processor_extract_single
    citation_processor_extract_citations -.->|"calls"| citation_processor_enhance_external
    citation_processor_extract_refs_section -.->|"uses"| reference_extractor_class
    citation_processor_enhance_external -.->|"calls"| citation_enhancer_enhance
    citation_processor_enhance_external -.->|"calls"| pdf_locator_locate
    citation_processor_process_document -.->|"calls"| citation_processor_build_graph

    %% CitationProcessor usage by CitationService
    citation_service_citation_processor_prop -.->|"creates and uses"| citation_processor_class

    %% Reference Extractor Implementation
    subgraph "File: src/thoth/analyze/citations/extractor.py"
        reference_extractor_class["Class: ReferenceExtractor<br/>Extracts references sections from academic documents"]
        reference_extractor_heading_regex["Class Attribute: HEADING_REGEX<br/>Compiled regex pattern for markdown headings (ATX and Setext styles)"]
        reference_extractor_init["Method: __init__(llm, prompt_template: ChatPromptTemplate) -> None<br/>Initialize ReferenceExtractor with LLM and prompt template"]
        reference_extractor_extract["Method: extract(content: str) -> str<br/>Main method to identify and extract references section text"]
        reference_extractor_get_headings["Method: _get_section_headings(content: str) -> list[str]<br/>Extract all section headings from content using regex"]
        reference_extractor_identify_heading["Method: _identify_references_heading(headings: list[str]) -> str<br/>Identify references heading using default patterns or LLM fallback"]
        reference_extractor_extract_text["Method: _extract_references_section_text(content: str, heading: str) -> str<br/>Extract text content for the identified references section"]

        reference_extractor_class --> reference_extractor_init
        reference_extractor_class --> reference_extractor_extract
        reference_extractor_class --> reference_extractor_get_headings
        reference_extractor_class --> reference_extractor_identify_heading
        reference_extractor_class --> reference_extractor_extract_text
    end

    %% ReferenceExtractor dependencies and method calls
    reference_extractor_extract -.->|"calls"| reference_extractor_get_headings
    reference_extractor_extract -.->|"calls"| reference_extractor_identify_heading
    reference_extractor_extract -.->|"calls"| reference_extractor_extract_text
    reference_extractor_identify_heading -.->|"uses LLM when needed"| llm_service_class
    reference_extractor_get_headings -.->|"uses"| reference_extractor_heading_regex

    %% ReferenceExtractor usage by CitationProcessor
    citation_processor_extract_refs_section -.->|"uses"| reference_extractor_class

    %% Citation Enhancer Implementation
    subgraph "File: src/thoth/analyze/citations/enhancer.py"
        citation_enhancer_class["Class: CitationEnhancer<br/>Enhances citation data using external APIs"]
        citation_enhancer_init["Method: __init__(config) -> None<br/>Initialize with configuration and setup external service clients"]
        citation_enhancer_enhance["Method: enhance(citations: list[Citation]) -> list[Citation]<br/>Main method to enhance citations with external services"]
        citation_enhancer_check_citation["Method: _check_citation(citation: Citation) -> tuple[bool, bool]<br/>Check if citation has identifier and missing fields"]
        citation_enhancer_arxiv_lookup["Method: _arxiv_lookup(citations: list[Citation]) -> None<br/>Perform arXiv lookup for citations"]
        citation_enhancer_scholarly_lookup["Method: _scholarly_lookup(citations: list[Citation]) -> None<br/>Perform Google Scholar lookup for citations"]

        citation_enhancer_class --> citation_enhancer_init
        citation_enhancer_class --> citation_enhancer_enhance
        citation_enhancer_class --> citation_enhancer_check_citation
        citation_enhancer_class --> citation_enhancer_arxiv_lookup
        citation_enhancer_class --> citation_enhancer_scholarly_lookup
    end

    %% CitationEnhancer dependencies and method calls
    citation_enhancer_init -.->|"creates"| semantic_scholar_api_class
    citation_enhancer_init -.->|"creates"| opencitations_api_class
    citation_enhancer_init -.->|"creates"| scholarly_api_class
    citation_enhancer_init -.->|"creates"| arxiv_client_class
    citation_enhancer_enhance -.->|"calls"| semantic_scholar_lookup
    citation_enhancer_enhance -.->|"calls"| citation_enhancer_check_citation
    citation_enhancer_enhance -.->|"calls"| opencitations_lookup_metadata
    citation_enhancer_enhance -.->|"calls"| citation_enhancer_arxiv_lookup
    citation_enhancer_enhance -.->|"calls"| citation_enhancer_scholarly_lookup
    citation_enhancer_arxiv_lookup -.->|"calls"| arxiv_client_lookup
    citation_enhancer_scholarly_lookup -.->|"calls"| scholarly_find_doi
    citation_enhancer_scholarly_lookup -.->|"calls"| scholarly_find_pdf_url

    %% CitationEnhancer usage by CitationProcessor
    citation_processor_enhance_external -.->|"uses"| citation_enhancer_class

    %% OpenCitations API Implementation
    subgraph "File: src/thoth/analyze/citations/opencitation.py"
        opencitations_api_class["Class: OpenCitationsAPI<br/>Client for interacting with OpenCitations Meta REST API"]
        opencitations_api_init["Method: __init__(base_url='https://opencitations.net/meta/api/v1', access_token=None, timeout=10, delay_seconds=1.0, max_retries=9) -> None<br/>Initialize OpenCitations API client with configuration"]
        opencitations_api_make_request["Method: _make_request_sync(endpoint, params=None, require=None, filters=None, sort=None, format_type='json') -> dict | list<br/>Make authenticated request with retries and exponential backoff"]
        opencitations_api_lookup_metadata["Method: lookup_metadata_sync(ids: list[str]) -> list[OpenCitation]<br/>Look up bibliographic metadata for one or more IDs synchronously"]
        opencitations_api_close["Method: close() -> None<br/>Close the HTTP client connection"]

        opencitations_api_class --> opencitations_api_init
        opencitations_api_class --> opencitations_api_make_request
        opencitations_api_class --> opencitations_api_lookup_metadata
        opencitations_api_class --> opencitations_api_close
    end

    %% OpenCitationsAPI dependencies and method calls
    opencitations_api_lookup_metadata -.->|"calls"| opencitations_api_make_request
    opencitations_api_make_request -.->|"implements retry logic"| opencitations_api_make_request
    opencitations_api_init -.->|"creates"| httpx_client_class

    %% OpenCitationsAPI usage by CitationEnhancer
    citation_enhancer_enhance -.->|"uses"| opencitations_api_lookup_metadata

    %% Scholarly API Implementation
    subgraph "File: src/thoth/analyze/citations/scholarly.py"
        scholarly_api_class["Class: ScholarlyAPI<br/>Client for interacting with Google Scholar via Scholarly library"]
        scholarly_api_type_var["TypeVar: R<br/>Generic type variable for wrapped scholarly function return types"]
        scholarly_api_init["Method: __init__(timeout=10, max_retries=9, initial_delay_seconds=2.0) -> None<br/>Initialize Google Scholar client using Scholarly library"]
        scholarly_api_call_with_retry["Method: _call_scholarly_with_retry(func: Callable[..., R], *args, **kwargs) -> R<br/>Wrap scholarly library call with retry logic and exponential backoff"]
        scholarly_api_search["Method: search(query: str, num_results=5) -> list[SearchResult]<br/>Perform search using Google Scholar API via Scholarly with retries"]
        scholarly_api_find_doi["Method: find_doi_sync(citation: Citation) -> str | None<br/>Find DOI for a citation using Google Scholar search and detail extraction"]
        scholarly_api_find_pdf_url["Method: find_pdf_url_sync(citation: Citation) -> str | None<br/>Find PDF URL for a citation using Google Scholar search"]
        scholarly_api_find_alternative_id["Method: find_alternative_id_sync(citation: Citation) -> str | None<br/>Find alternative identifier (e.g., arXiv ID) when DOI is not available"]
        scholarly_api_close["Method: close() -> None<br/>Close the client session and cleanup resources"]
        scholarly_api_del["Method: __del__() -> None<br/>Ensure client is closed on deletion"]

        scholarly_api_class --> scholarly_api_init
        scholarly_api_class --> scholarly_api_call_with_retry
        scholarly_api_class --> scholarly_api_search
        scholarly_api_class --> scholarly_api_find_doi
        scholarly_api_class --> scholarly_api_find_pdf_url
        scholarly_api_class --> scholarly_api_find_alternative_id
        scholarly_api_class --> scholarly_api_close
        scholarly_api_class --> scholarly_api_del
    end

    %% ScholarlyAPI dependencies and method calls
    scholarly_api_init -.->|"creates"| httpx_client_class
    scholarly_api_search -.->|"calls"| scholarly_api_call_with_retry
    scholarly_api_find_doi -.->|"calls"| scholarly_api_search
    scholarly_api_find_doi -.->|"calls"| scholarly_api_call_with_retry
    scholarly_api_find_pdf_url -.->|"calls"| scholarly_api_search
    scholarly_api_find_alternative_id -.->|"calls"| scholarly_api_search
    scholarly_api_find_alternative_id -.->|"calls"| scholarly_api_call_with_retry
    scholarly_api_del -.->|"calls"| scholarly_api_close

    %% ScholarlyAPI usage by CitationEnhancer
    citation_enhancer_scholarly_lookup -.->|"uses"| scholarly_api_find_doi
    citation_enhancer_scholarly_lookup -.->|"uses"| scholarly_api_find_pdf_url

    %% Semantic Scholar API Implementation
    subgraph "File: src/thoth/analyze/citations/semanticscholar.py"
        semantic_scholar_api_class["Class: SemanticScholarAPI<br/>Client for interacting with Semantic Scholar API to retrieve citation metadata"]
        semantic_scholar_api_init["Method: __init__(base_url='https://api.semanticscholar.org/graph/v1', api_key=None, timeout=10, delay_seconds=1.0, max_retries=9, batch_size=100, enable_caching=True) -> None<br/>Initialize Semantic Scholar API client with configuration"]
        semantic_scholar_api_make_request["Method: _make_request(endpoint, params=None, method='GET', json_data=None) -> dict | None<br/>Make authenticated request with rate limiting and retries"]
        semantic_scholar_api_cached_doi_lookup["Method: _cached_paper_lookup_by_doi(doi: str, fields_str: str) -> dict | None<br/>Cached lookup of paper by DOI with LRU-like behavior"]
        semantic_scholar_api_cached_arxiv_lookup["Method: _cached_paper_lookup_by_arxiv(arxiv_id: str, fields_str: str) -> dict | None<br/>Cached lookup of paper by arXiv ID with LRU-like behavior"]
        semantic_scholar_api_paper_lookup_doi["Method: paper_lookup_by_doi(doi: str, fields=None) -> dict | None<br/>Look up a paper by DOI using Semantic Scholar API"]
        semantic_scholar_api_paper_lookup_arxiv["Method: paper_lookup_by_arxiv(arxiv_id: str, fields=None) -> dict | None<br/>Look up a paper by arXiv ID using Semantic Scholar API"]
        semantic_scholar_api_paper_search["Method: paper_search(query: str, fields=None, limit=10, offset=0) -> list[dict]<br/>Search for papers matching the query using Semantic Scholar API"]
        semantic_scholar_api_paper_lookup_batch["Method: paper_lookup_batch(paper_ids: list[str], fields=None) -> list[dict]<br/>Look up multiple papers by IDs in batch requests"]
        semantic_scholar_api_paper_lookup_batch_single["Method: _paper_lookup_batch_single(paper_ids: list[str], fields=None) -> list[dict]<br/>Internal method for single batch lookup operation"]
        semantic_scholar_api_author_search["Method: author_search(query: str, fields=None, limit=10, offset=0) -> list[dict]<br/>Search for authors matching the query"]
        semantic_scholar_api_update_citation["Method: update_citation_from_semantic_scholar(citation: Citation, paper_data: dict) -> None<br/>Update Citation object with data from Semantic Scholar API"]
        semantic_scholar_api_lookup["Method: semantic_scholar_lookup(citations: list[Citation]) -> list[Citation]<br/>Main method to enhance citations using optimized batch processing"]
        semantic_scholar_api_close["Method: close() -> None<br/>Close the HTTP client connection"]

        semantic_scholar_api_class --> semantic_scholar_api_init
        semantic_scholar_api_class --> semantic_scholar_api_make_request
        semantic_scholar_api_class --> semantic_scholar_api_cached_doi_lookup
        semantic_scholar_api_class --> semantic_scholar_api_cached_arxiv_lookup
        semantic_scholar_api_class --> semantic_scholar_api_paper_lookup_doi
        semantic_scholar_api_class --> semantic_scholar_api_paper_lookup_arxiv
        semantic_scholar_api_class --> semantic_scholar_api_paper_search
        semantic_scholar_api_class --> semantic_scholar_api_paper_lookup_batch
        semantic_scholar_api_class --> semantic_scholar_api_paper_lookup_batch_single
        semantic_scholar_api_class --> semantic_scholar_api_author_search
        semantic_scholar_api_class --> semantic_scholar_api_update_citation
        semantic_scholar_api_class --> semantic_scholar_api_lookup
        semantic_scholar_api_class --> semantic_scholar_api_close
    end

    %% SemanticScholarAPI dependencies and method calls
    semantic_scholar_api_init -.->|"creates"| httpx_client_class
    semantic_scholar_api_cached_doi_lookup -.->|"calls"| semantic_scholar_api_paper_lookup_doi
    semantic_scholar_api_cached_arxiv_lookup -.->|"calls"| semantic_scholar_api_paper_lookup_arxiv
    semantic_scholar_api_paper_lookup_doi -.->|"calls"| semantic_scholar_api_make_request
    semantic_scholar_api_paper_lookup_arxiv -.->|"calls"| semantic_scholar_api_make_request
    semantic_scholar_api_paper_search -.->|"calls"| semantic_scholar_api_make_request
    semantic_scholar_api_paper_lookup_batch -.->|"calls"| semantic_scholar_api_paper_lookup_batch_single
    semantic_scholar_api_paper_lookup_batch_single -.->|"calls"| semantic_scholar_api_make_request
    semantic_scholar_api_author_search -.->|"calls"| semantic_scholar_api_make_request
    semantic_scholar_api_lookup -.->|"calls"| semantic_scholar_api_paper_lookup_batch
    semantic_scholar_api_lookup -.->|"calls"| semantic_scholar_api_paper_search
    semantic_scholar_api_lookup -.->|"calls"| semantic_scholar_api_update_citation

    %% SemanticScholarAPI usage by CitationEnhancer
    citation_enhancer_enhance -.->|"uses"| semantic_scholar_api_lookup

    %% Citation Formatter Implementation
    subgraph "File: src/thoth/analyze/citations/formatter.py"
        citation_style_enum["Enum: CitationStyle<br/>Different citation styles (IEEE, APA, MLA, CHICAGO, HARVARD)"]
        citation_format_error_class["Class: CitationFormatError<br/>Exception raised for errors in citation formatting process"]
        citation_formatter_class["Class: CitationFormatter<br/>Formats citations in different academic styles"]
        citation_formatter_format_citation["Method: format_citation(citation: Citation, style: CitationStyle = CitationStyle.IEEE) -> Citation<br/>Static method to format a single citation according to specified style"]
        citation_formatter_format_citations["Method: format_citations(citations: list[Citation], style: CitationStyle = CitationStyle.IEEE) -> list[Citation]<br/>Format a list of citations according to specified style"]
        citation_formatter_format_apa["Method: _format_apa(citation: Citation) -> str<br/>Static method to format citation in APA style (7th Edition)"]
        citation_formatter_format_mla["Method: _format_mla(citation: Citation) -> str<br/>Static method to format citation in MLA style (9th Edition)"]
        citation_formatter_format_chicago["Method: _format_chicago(citation: Citation) -> str<br/>Static method to format citation in Chicago style (Notes and Bibliography)"]
        citation_formatter_format_harvard["Method: _format_harvard(citation: Citation) -> str<br/>Static method to format citation in Harvard style"]
        citation_formatter_format_ieee["Method: _format_ieee(citation: Citation) -> str<br/>Static method to format citation in IEEE style"]
        format_citation_func["Function: format_citation(citation: Citation, style: str = 'ieee') -> str<br/>Convenience function that wraps CitationFormatter class"]

        citation_formatter_class --> citation_formatter_format_citation
        citation_formatter_class --> citation_formatter_format_citations
        citation_formatter_class --> citation_formatter_format_apa
        citation_formatter_class --> citation_formatter_format_mla
        citation_formatter_class --> citation_formatter_format_chicago
        citation_formatter_class --> citation_formatter_format_harvard
        citation_formatter_class --> citation_formatter_format_ieee
    end

    %% CitationFormatter dependencies and method calls
    citation_formatter_format_citation -.->|"calls appropriate"| citation_formatter_format_apa
    citation_formatter_format_citation -.->|"calls appropriate"| citation_formatter_format_mla
    citation_formatter_format_citation -.->|"calls appropriate"| citation_formatter_format_chicago
    citation_formatter_format_citation -.->|"calls appropriate"| citation_formatter_format_harvard
    citation_formatter_format_citation -.->|"calls appropriate"| citation_formatter_format_ieee
    citation_formatter_format_citations -.->|"calls for each"| citation_formatter_format_citation
    format_citation_func -.->|"uses"| citation_formatter_format_citation

    %% CitationFormatter usage by CitationService
    citation_service_format_citation -.->|"uses"| citation_formatter_class

    %% Internal method calls within DiscoveryScheduler
    discovery_scheduler_init -.->|"calls"| discovery_scheduler_load_state
    discovery_scheduler_start -.->|"calls"| discovery_scheduler_loop
    discovery_scheduler_add_source -.->|"calls"| discovery_scheduler_calc_next
    discovery_scheduler_add_source -.->|"calls"| discovery_scheduler_save_state
    discovery_scheduler_remove_source -.->|"calls"| discovery_scheduler_save_state
    discovery_scheduler_update_schedule -.->|"calls"| discovery_scheduler_calc_next
    discovery_scheduler_update_schedule -.->|"calls"| discovery_scheduler_save_state
    discovery_scheduler_run_now -.->|"calls"| discovery_scheduler_save_state
    discovery_scheduler_loop -.->|"calls"| discovery_scheduler_check_run
    discovery_scheduler_check_run -.->|"calls"| discovery_scheduler_calc_next
    discovery_scheduler_check_run -.->|"calls"| discovery_scheduler_save_state
    discovery_scheduler_sync -.->|"calls"| discovery_scheduler_calc_next
    discovery_scheduler_sync -.->|"calls"| discovery_scheduler_save_state

    %% Internal method calls within ArxivClient
    arxiv_client_discovery_search -.->|"calls"| arxiv_client_discovery_make_request
    arxiv_client_discovery_search -.->|"calls"| arxiv_client_discovery_parse_response
    arxiv_client_discovery_get_by_id -.->|"calls"| arxiv_client_discovery_make_request
    arxiv_client_discovery_get_by_id -.->|"calls"| arxiv_client_discovery_parse_response
    arxiv_client_discovery_lookup -.->|"calls"| arxiv_client_discovery_search
    arxiv_client_discovery_lookup -.->|"calls"| arxiv_client_discovery_update_citation
    arxiv_client_discovery_lookup -.->|"calls"| arxiv_client_discovery_citation_count

    %% Internal method calls within ArxivAPISource
    arxiv_api_source_search -.->|"calls"| arxiv_api_source_rate_limit
    arxiv_api_source_search -.->|"calls"| arxiv_api_source_parse_entry

    %% Internal method calls within PubMedAPISource
    pubmed_api_source_search -.->|"calls"| pubmed_api_source_search_pmids
    pubmed_api_source_search -.->|"calls"| pubmed_api_source_fetch_details
    pubmed_api_source_search_pmids -.->|"calls"| pubmed_api_source_rate_limit
    pubmed_api_source_fetch_details -.->|"calls"| pubmed_api_source_fetch_batch
    pubmed_api_source_fetch_batch -.->|"calls"| pubmed_api_source_rate_limit
    pubmed_api_source_fetch_batch -.->|"calls"| pubmed_api_source_parse_article

    %% Internal method calls within ChromeExtensionServer
    chrome_extension_server_start -.->|"calls"| chrome_extension_server_handle_client
    chrome_extension_server_handle_client -.->|"calls"| chrome_extension_server_process_message
    chrome_extension_server_process_message -.->|"calls"| chrome_extension_server_test_selectors
    chrome_extension_server_process_message -.->|"calls"| chrome_extension_server_save_config
    chrome_extension_server_process_message -.->|"calls"| chrome_extension_server_load_config
    chrome_extension_server_process_message -.->|"calls"| chrome_extension_server_list_configs
    chrome_extension_server_process_message -.->|"calls"| chrome_extension_server_test_scrape
    chrome_extension_server_save_config -.->|"calls"| chrome_extension_server_convert_config
    chrome_extension_server_test_scrape -.->|"calls"| chrome_extension_server_convert_config

    %% Internal method calls within WebScraper
    web_scraper_scrape -.->|"calls"| web_scraper_apply_config
    web_scraper_scrape -.->|"calls"| web_scraper_scrape_page
    web_scraper_scrape -.->|"calls"| web_scraper_get_next_page
    web_scraper_scrape -.->|"calls"| web_scraper_apply_rate_limit
    web_scraper_scrape_page -.->|"calls"| web_scraper_find_containers
    web_scraper_scrape_page -.->|"calls"| web_scraper_extract_metadata
    web_scraper_extract_metadata -.->|"calls"| web_scraper_extract_field
    web_scraper_extract_metadata -.->|"calls"| web_scraper_normalize_authors
    web_scraper_extract_field -.->|"calls"| web_scraper_apply_transform
    web_scraper_test_config -.->|"calls"| web_scraper_apply_config
    web_scraper_test_config -.->|"calls"| web_scraper_scrape_page
    web_scraper_parse_html -.->|"calls"| web_scraper_find_containers
    web_scraper_parse_html -.->|"calls"| web_scraper_extract_metadata

    %% Function calls
    run_chrome_extension_server_func -.->|"creates and calls"| chrome_extension_server_start
    run_emulator_func -.->|"creates and calls"| web_emulator_recorder_start
    run_emulator_func -.->|"calls"| web_emulator_recorder_stop
    run_emulator_func -.->|"calls"| web_emulator_recorder_save

    %% EmulatorScraper uses WebScraper
    emulator_scraper_init -.->|"creates"| web_scraper_class
    emulator_scraper_scrape -.->|"calls"| web_scraper_parse_html

    %% ChromeExtensionServer uses WebScraper
    chrome_extension_server_init -.->|"creates"| web_scraper_class
    chrome_extension_server_test_selectors -.->|"calls"| web_scraper_test_config
    chrome_extension_server_test_scrape -.->|"calls"| web_scraper_test_config

    %% DiscoveryService uses Discovery modules
    discovery_service_init -.->|"creates"| discovery_scheduler_class
    discovery_service_init -.->|"creates"| arxiv_api_source_class
    discovery_service_init -.->|"creates"| pubmed_api_source_class
    discovery_service_init -.->|"creates"| web_scraper_class
    discovery_service_init -.->|"creates"| emulator_scraper_class
    discovery_service_start_scheduler -.->|"calls"| discovery_scheduler_start
    discovery_service_stop_scheduler -.->|"calls"| discovery_scheduler_stop
    discovery_service_get_schedule_status -.->|"calls"| discovery_scheduler_get_status
    discovery_service_run_discovery -.->|"calls"| arxiv_api_source_search
    discovery_service_run_discovery -.->|"calls"| pubmed_api_source_search
    discovery_service_run_discovery -.->|"calls"| web_scraper_scrape
    discovery_service_run_discovery -.->|"calls"| emulator_scraper_scrape

    %% Inheritance relationships for discovery modules
    arxiv_api_source_class -.->|"inherits from"| base_api_source_class
    pubmed_api_source_class -.->|"inherits from"| base_api_source_class

    %% Ingestion Module Entry Point
    subgraph "File: src/thoth/ingestion/__init__.py"
        ingestion_init_module["Module: Ingestion Package Init<br/>Entry point for ingestion package with public API exports"]
        ingestion_init_import_agent["Import: ResearchAssistant, create_research_assistant<br/>from .agent_v2"]
        ingestion_init_import_pdf["Import: download_pdf<br/>from .pdf_downloader"]
        ingestion_init_all["__all__ = ['ResearchAssistant', 'create_research_assistant', 'download_pdf']<br/>Public API definition"]

        ingestion_init_module --> ingestion_init_import_agent
        ingestion_init_module --> ingestion_init_import_pdf
        ingestion_init_module --> ingestion_init_all
    end

    %% Agent V2 Core Agent Module
    subgraph "File: src/thoth/ingestion/agent_v2/core/agent.py"
        research_assistant_class["Class: ResearchAssistant<br/>Modern research assistant agent using LangGraph and MCP framework"]
        research_assistant_init["Method: __init__(service_manager, enable_memory, system_prompt) -> None<br/>Initialize the research assistant"]
        research_assistant_register_tools["Method: _register_tools() -> None<br/>Register all available tools with the registry"]
        research_assistant_get_default_prompt["Method: _get_default_system_prompt() -> str<br/>Get the default system prompt for the agent"]
        research_assistant_build_graph["Method: _build_graph() -> StateGraph<br/>Build the LangGraph agent graph"]
        research_assistant_agent_node["Method: _agent_node(state: ResearchAgentState) -> dict[str, Any]<br/>Main agent node that processes messages and decides on actions"]
        research_assistant_chat["Method: chat(message, session_id, user_id, context, model_override) -> dict[str, Any]<br/>Process a user message and return the agent's response"]
        research_assistant_get_tools["Method: get_available_tools() -> list[dict[str, str]]<br/>Get information about all available tools"]
        research_assistant_reset_memory["Method: reset_memory(session_id) -> None<br/>Reset conversation memory for a session"]
        research_assistant_get_token_usage["Method: get_token_usage(user_id) -> dict[str, int]<br/>Return accumulated token usage for a user"]
        create_research_assistant_func["Function: create_research_assistant(service_manager, enable_memory, system_prompt) -> ResearchAssistant<br/>Factory function to create a research assistant"]

        research_assistant_class --> research_assistant_init
        research_assistant_class --> research_assistant_register_tools
        research_assistant_class --> research_assistant_get_default_prompt
        research_assistant_class --> research_assistant_build_graph
        research_assistant_class --> research_assistant_agent_node
        research_assistant_class --> research_assistant_chat
        research_assistant_class --> research_assistant_get_tools
        research_assistant_class --> research_assistant_reset_memory
        research_assistant_class --> research_assistant_get_token_usage
    end

    %% PDF Downloader Module
    subgraph "File: src/thoth/ingestion/pdf_downloader.py"
        download_pdf_func["Function: download_pdf(url: str, pdf_dir: Path, filename: str | None = None) -> Path<br/>Download a PDF from a URL and save it to the configured directory"]
        download_pdf_validate_url["Step: Validate URL (must end with .pdf)<br/>Check if URL points to a PDF file"]
        download_pdf_create_dirs["Step: Create directories<br/>Ensure pdf_dir exists with mkdir(parents=True, exist_ok=True)"]
        download_pdf_determine_filename["Step: Determine filename<br/>Use provided filename or extract from URL"]
        download_pdf_request["Step: HTTP request with progress<br/>Use requests.get with stream=True and tqdm progress bar"]
        download_pdf_save_file["Step: Save file<br/>Write chunks to disk with progress tracking"]

        download_pdf_func --> download_pdf_validate_url
        download_pdf_func --> download_pdf_create_dirs
        download_pdf_func --> download_pdf_determine_filename
        download_pdf_func --> download_pdf_request
        download_pdf_func --> download_pdf_save_file
    end

    %% PDF Downloader dependencies
    download_pdf_func -.->|"uses"| requests_library["External: requests library<br/>HTTP requests"]
    download_pdf_func -.->|"uses"| tqdm_library["External: tqdm library<br/>Progress bars"]
    download_pdf_func -.->|"uses"| loguru_logger["External: loguru.logger<br/>Logging"]

    %% Import relationships from __init__.py
    ingestion_init_import_agent -.->|"imports"| research_assistant_class
    ingestion_init_import_agent -.->|"imports"| create_research_assistant_func
    ingestion_init_import_pdf -.->|"imports"| download_pdf_func

    %% Agent V2 Package Entry Point
    subgraph "File: src/thoth/ingestion/agent_v2/__init__.py"
        agent_v2_init_module["Module: Agent V2 Package Init<br/>Modern research assistant agent using LangGraph and MCP framework"]
        agent_v2_init_import_agent["Import: ResearchAssistant, create_research_assistant<br/>from core.agent"]
        agent_v2_init_import_state["Import: ResearchAgentState<br/>from core.state"]
        agent_v2_init_all["__all__ = ['ResearchAgentState', 'ResearchAssistant', 'create_research_assistant']<br/>Public API definition"]

        agent_v2_init_module --> agent_v2_init_import_agent
        agent_v2_init_module --> agent_v2_init_import_state
        agent_v2_init_module --> agent_v2_init_all
    end

    %% Agent V2 Core State Module
    subgraph "File: src/thoth/ingestion/agent_v2/core/state.py"
        research_agent_state_class["Class: ResearchAgentState (BaseModel)<br/>State definition for the research assistant agent"]
        research_agent_state_messages["Field: messages: Annotated[list[BaseMessage], add_messages]<br/>Conversation history as LangChain messages"]
        research_agent_state_current_task["Field: current_task: str | None<br/>Description of the current task being performed"]
        research_agent_state_last_tool["Field: last_tool_result: str | None<br/>Result from the last tool execution"]
        research_agent_state_user_context["Field: user_context: dict[str, Any]<br/>User-specific context and preferences"]
        research_agent_state_active_queries["Field: active_queries: list[str]<br/>List of active research queries"]
        research_agent_state_active_sources["Field: active_sources: list[str]<br/>List of active discovery sources"]
        research_agent_state_session_id["Field: session_id: str | None<br/>Session identifier for memory persistence"]
        research_agent_state_error["Field: error: str | None<br/>Error message if something went wrong"]
        research_agent_state_intermediate["Field: intermediate_steps: list[dict[str, Any]]<br/>Steps taken during processing"]
        research_agent_state_model_override["Field: model_override: str | None<br/>Model to use for the current turn"]

        research_agent_state_class --> research_agent_state_messages
        research_agent_state_class --> research_agent_state_current_task
        research_agent_state_class --> research_agent_state_last_tool
        research_agent_state_class --> research_agent_state_user_context
        research_agent_state_class --> research_agent_state_active_queries
        research_agent_state_class --> research_agent_state_active_sources
        research_agent_state_class --> research_agent_state_session_id
        research_agent_state_class --> research_agent_state_error
        research_agent_state_class --> research_agent_state_intermediate
        research_agent_state_class --> research_agent_state_model_override
    end

    %% Import relationships from agent_v2 __init__.py
    agent_v2_init_import_agent -.->|"imports"| research_assistant_class
    agent_v2_init_import_agent -.->|"imports"| create_research_assistant_func
    agent_v2_init_import_state -.->|"imports"| research_agent_state_class

    %% Agent V2 Core Token Tracker Module
    subgraph "File: src/thoth/ingestion/agent_v2/core/token_tracker.py"
        token_usage_tracker_class["Class: TokenUsageTracker<br/>Persistent tracker for token usage by user"]
        token_usage_tracker_init["Method: __init__(usage_file: Path | None = None) -> None<br/>Initialize the tracker and load existing usage data"]
        token_usage_tracker_load["Method: _load_usage() -> None<br/>Load usage data from disk"]
        token_usage_tracker_save["Method: _save_usage() -> None<br/>Persist usage data to disk"]
        token_usage_tracker_add["Method: add_usage(user_id: str, usage: dict[str, float]) -> None<br/>Add token usage for a user and persist it"]
        token_usage_tracker_get["Method: get_usage(user_id: str) -> dict[str, int]<br/>Get accumulated usage for a user"]
        token_usage_tracker_reset["Method: reset_usage(user_id: str | None = None) -> None<br/>Reset usage for a user or all users"]

        token_usage_tracker_class --> token_usage_tracker_init
        token_usage_tracker_class --> token_usage_tracker_load
        token_usage_tracker_class --> token_usage_tracker_save
        token_usage_tracker_class --> token_usage_tracker_add
        token_usage_tracker_class --> token_usage_tracker_get
        token_usage_tracker_class --> token_usage_tracker_reset
    end

    %% Agent V2 Tools Base Module
    subgraph "File: src/thoth/ingestion/agent_v2/tools/base_tool.py"
        base_thoth_tool_class["Class: BaseThothTool (BaseTool, ABC)<br/>Base class for all Thoth research assistant tools"]
        base_thoth_tool_init["Method: __init__(**kwargs)<br/>Initialize the tool with optional service_manager and config"]
        base_thoth_tool_run["Method: _run(*args, **kwargs) -> str (abstract)<br/>Execute the tool's main functionality"]
        base_thoth_tool_arun["Method: _arun(*args, **kwargs) -> str (async)<br/>Async version of run"]
        base_thoth_tool_handle_error["Method: handle_error(error: Exception, context: str = '') -> str<br/>Standard error handling for tools"]

        tool_registry_class["Class: ToolRegistry<br/>Registry for managing and creating tool instances"]
        tool_registry_init["Method: __init__(service_manager: ServiceManager, config=None)<br/>Initialize the tool registry"]
        tool_registry_register["Method: register(name: str, tool_class: type[BaseThothTool]) -> None<br/>Register a tool class with the registry"]
        tool_registry_create_tool["Method: create_tool(name: str, **kwargs) -> BaseThothTool<br/>Create an instance of a registered tool"]
        tool_registry_create_all["Method: create_all_tools() -> list[BaseThothTool]<br/>Create instances of all registered tools"]
        tool_registry_get_names["Method: get_tool_names() -> list[str]<br/>Get list of all registered tool names"]

        json_tool_input_class["Class: JsonToolInput (BaseModel)<br/>Base schema for tools that accept JSON input"]
        query_name_input_class["Class: QueryNameInput (BaseModel)<br/>Schema for tools that require a query name"]
        source_name_input_class["Class: SourceNameInput (BaseModel)<br/>Schema for tools that require a source name"]
        search_input_class["Class: SearchInput (BaseModel)<br/>Schema for search/RAG tools"]

        base_thoth_tool_class --> base_thoth_tool_init
        base_thoth_tool_class --> base_thoth_tool_run
        base_thoth_tool_class --> base_thoth_tool_arun
        base_thoth_tool_class --> base_thoth_tool_handle_error

        tool_registry_class --> tool_registry_init
        tool_registry_class --> tool_registry_register
        tool_registry_class --> tool_registry_create_tool
        tool_registry_class --> tool_registry_create_all
        tool_registry_class --> tool_registry_get_names
    end

    %% ResearchAssistant dependencies and method calls
    research_assistant_init -.->|"creates"| service_manager_class
    research_assistant_init -.->|"creates"| token_usage_tracker_class
    research_assistant_init -.->|"creates"| tool_registry_class
    research_assistant_init -.->|"calls"| research_assistant_register_tools
    research_assistant_init -.->|"calls"| research_assistant_get_default_prompt
    research_assistant_init -.->|"calls"| research_assistant_build_graph
    research_assistant_chat -.->|"calls"| research_assistant_agent_node
    research_assistant_chat -.->|"uses"| token_usage_tracker_class
    research_assistant_agent_node -.->|"uses"| research_agent_state_class
    research_assistant_build_graph -.->|"uses"| research_agent_state_class
    create_research_assistant_func -.->|"creates"| research_assistant_class

    %% TokenUsageTracker internal method calls
    token_usage_tracker_init -.->|"calls"| token_usage_tracker_load
    token_usage_tracker_add -.->|"calls"| token_usage_tracker_save
    token_usage_tracker_reset -.->|"calls"| token_usage_tracker_save

    %% ToolRegistry relationships and method calls
    tool_registry_init -.->|"uses"| service_manager_class
    tool_registry_create_tool -.->|"creates instances of"| base_thoth_tool_class
    tool_registry_create_all -.->|"calls"| tool_registry_create_tool
    research_assistant_register_tools -.->|"calls"| tool_registry_register

    %% Agent V2 Analysis Tools Module
    subgraph "File: src/thoth/ingestion/agent_v2/tools/analysis_tools.py"
        evaluate_article_input_class["Class: EvaluateArticleInput (BaseModel)<br/>Input schema for evaluating an article"]
        evaluate_article_tool_class["Class: EvaluateArticleTool (BaseThothTool)<br/>Evaluate an article against a research query"]
        evaluate_article_tool_run["Method: _run(article_title: str, query_name: str) -> str<br/>Evaluate an article against a query"]

        analyze_topic_input_class["Class: AnalyzeTopicInput (BaseModel)<br/>Input schema for analyzing a research topic"]
        analyze_topic_tool_class["Class: AnalyzeTopicTool (BaseThothTool)<br/>Analyze a research topic in knowledge base"]
        analyze_topic_tool_run["Method: _run(topic: str, depth: str = 'medium') -> str<br/>Analyze a research topic"]

        find_related_input_class["Class: FindRelatedInput (BaseModel)<br/>Input schema for finding related work"]
        find_related_tool_class["Class: FindRelatedTool (BaseThothTool)<br/>Find papers related to a specific paper"]
        find_related_tool_run["Method: _run(paper_title: str, max_results: int = 5, explain_connections: bool = False) -> str<br/>Find related papers"]

        article_analysis_input_class["Class: ArticleAnalysisInput (BaseModel)<br/>Input schema for analyzing an article"]
        article_analysis_tool_class["Class: ArticleAnalysisTool (BaseThothTool)<br/>Analyzes an article for relevance and quality"]
        article_analysis_tool_run["Method: _run(article_title: str, article_abstract: str, article_content: str | None = None) -> str<br/>Evaluate an article"]
        article_analysis_tool_arun["Method: _arun(research_question: str, article_title: str, article_abstract: str, article_content: str | None = None) -> str<br/>Async evaluate an article"]

        evaluate_article_tool_class --> evaluate_article_tool_run
        analyze_topic_tool_class --> analyze_topic_tool_run
        find_related_tool_class --> find_related_tool_run
        article_analysis_tool_class --> article_analysis_tool_run
        article_analysis_tool_class --> article_analysis_tool_arun
    end

    %% Analysis Tools relationships
    evaluate_article_tool_class -.->|"inherits from"| base_thoth_tool_class
    analyze_topic_tool_class -.->|"inherits from"| base_thoth_tool_class
    find_related_tool_class -.->|"inherits from"| base_thoth_tool_class
    article_analysis_tool_class -.->|"inherits from"| base_thoth_tool_class

    %% Analysis Tools service usage
    evaluate_article_tool_run -.->|"uses"| service_manager_query_prop
    evaluate_article_tool_run -.->|"uses"| service_manager_rag_prop
    evaluate_article_tool_run -.->|"uses"| service_manager_article_prop
    analyze_topic_tool_run -.->|"uses"| service_manager_rag_prop
    find_related_tool_run -.->|"uses"| service_manager_rag_prop

    %% Tool registration in ResearchAssistant
    research_assistant_register_tools -.->|"registers"| evaluate_article_tool_class
    research_assistant_register_tools -.->|"registers"| analyze_topic_tool_class
    research_assistant_register_tools -.->|"registers"| find_related_tool_class

    %% Agent V2 Discovery Tools Module
    subgraph "File: src/thoth/ingestion/agent_v2/tools/discovery_tools.py"
        list_discovery_sources_tool_class["Class: ListDiscoverySourcesTool (BaseThothTool)<br/>List all configured discovery sources"]
        list_discovery_sources_tool_run["Method: _run() -> str<br/>List discovery sources"]

        create_discovery_source_input_class["Class: CreateDiscoverySourceInput (BaseModel)<br/>Input schema for creating discovery sources"]
        create_arxiv_source_tool_class["Class: CreateArxivSourceTool (BaseThothTool)<br/>Create an ArXiv discovery source"]
        create_arxiv_source_tool_run["Method: _run(name: str, keywords: list[str], categories: list[str] | None = None, max_articles: int = 50, schedule_hours: int = 24) -> str<br/>Create ArXiv source"]

        create_pubmed_source_input_class["Class: CreatePubmedSourceInput (BaseModel)<br/>Input schema for creating PubMed sources"]
        create_pubmed_source_tool_class["Class: CreatePubmedSourceTool (BaseThothTool)<br/>Create a PubMed discovery source"]
        create_pubmed_source_tool_run["Method: _run(name: str, keywords: list[str], max_articles: int = 20, schedule_hours: int = 48) -> str<br/>Create PubMed source"]

        run_discovery_input_class["Class: RunDiscoveryInput (BaseModel)<br/>Input schema for running discovery"]
        run_discovery_tool_class["Class: RunDiscoveryTool (BaseThothTool)<br/>Run article discovery"]
        run_discovery_tool_run["Method: _run(source_name: str | None = None, max_articles: int | None = None) -> str<br/>Run discovery"]

        delete_source_input_class["Class: DeleteSourceInput (BaseModel)<br/>Input schema for deleting a source"]
        delete_discovery_source_tool_class["Class: DeleteDiscoverySourceTool (BaseThothTool)<br/>Delete a discovery source"]
        delete_discovery_source_tool_run["Method: _run(source_name: str) -> str<br/>Delete a discovery source"]

        list_discovery_sources_tool_class --> list_discovery_sources_tool_run
        create_arxiv_source_tool_class --> create_arxiv_source_tool_run
        create_pubmed_source_tool_class --> create_pubmed_source_tool_run
        run_discovery_tool_class --> run_discovery_tool_run
        delete_discovery_source_tool_class --> delete_discovery_source_tool_run
    end

    %% Discovery Tools relationships
    list_discovery_sources_tool_class -.->|"inherits from"| base_thoth_tool_class
    create_arxiv_source_tool_class -.->|"inherits from"| base_thoth_tool_class
    create_pubmed_source_tool_class -.->|"inherits from"| base_thoth_tool_class
    run_discovery_tool_class -.->|"inherits from"| base_thoth_tool_class
    delete_discovery_source_tool_class -.->|"inherits from"| base_thoth_tool_class

    %% Discovery Tools service usage
    list_discovery_sources_tool_run -.->|"uses"| service_manager_discovery_prop
    create_arxiv_source_tool_run -.->|"uses"| service_manager_discovery_prop
    create_pubmed_source_tool_run -.->|"uses"| service_manager_discovery_prop
    run_discovery_tool_run -.->|"uses"| service_manager_discovery_prop
    delete_discovery_source_tool_run -.->|"uses"| service_manager_discovery_prop

    %% Discovery Tool registration in ResearchAssistant
    research_assistant_register_tools -.->|"registers"| list_discovery_sources_tool_class
    research_assistant_register_tools -.->|"registers"| create_arxiv_source_tool_class
    research_assistant_register_tools -.->|"registers"| create_pubmed_source_tool_class
    research_assistant_register_tools -.->|"registers"| run_discovery_tool_class
    research_assistant_register_tools -.->|"registers"| delete_discovery_source_tool_class

    %% Agent V2 PDF Tools Module
    subgraph "File: src/thoth/ingestion/agent_v2/tools/pdf_tools.py"
        locate_pdf_input_class["Class: LocatePdfInput (BaseModel)<br/>Input schema for locating a PDF"]
        locate_pdf_tool_class["Class: LocatePdfTool (BaseThothTool)<br/>Locate open-access PDFs for academic articles"]
        locate_pdf_tool_run["Method: _run(doi: str | None = None, arxiv_id: str | None = None, title: str | None = None) -> str<br/>Locate PDF for an article"]

        test_pdf_source_input_class["Class: TestPdfSourceInput (BaseModel)<br/>Input schema for testing PDF sources"]
        validate_pdf_source_tool_class["Class: ValidatePdfSourceTool (BaseThothTool)<br/>Test PDF location sources"]
        validate_pdf_source_tool_run["Method: _run(source: str, doi: str | None = None) -> str<br/>Test PDF location sources"]

        locate_pdfs_for_query_input_class["Class: LocatePdfsForQueryInput (BaseModel)<br/>Input schema for locating PDFs for articles matching a query"]
        locate_pdfs_for_query_tool_class["Class: LocatePdfsForQueryTool (BaseThothTool)<br/>Locate PDFs for articles matching a research query"]
        locate_pdfs_for_query_tool_run["Method: _run(query_name: str, limit: int = 10) -> str<br/>Locate PDFs for articles matching a query"]

        locate_pdf_tool_class --> locate_pdf_tool_run
        validate_pdf_source_tool_class --> validate_pdf_source_tool_run
        locate_pdfs_for_query_tool_class --> locate_pdfs_for_query_tool_run
    end

    %% PDF Tools relationships
    locate_pdf_tool_class -.->|"inherits from"| base_thoth_tool_class
    validate_pdf_source_tool_class -.->|"inherits from"| base_thoth_tool_class
    locate_pdfs_for_query_tool_class -.->|"inherits from"| base_thoth_tool_class

    %% PDF Tools service usage
    locate_pdf_tool_run -.->|"uses"| service_manager_pdf_locator_prop
    locate_pdf_tool_run -.->|"uses"| service_manager_rag_prop
    validate_pdf_source_tool_run -.->|"uses"| service_manager_pdf_locator_prop
    locate_pdfs_for_query_tool_run -.->|"uses"| service_manager_query_prop
    locate_pdfs_for_query_tool_run -.->|"uses"| service_manager_rag_prop
    locate_pdfs_for_query_tool_run -.->|"uses"| service_manager_pdf_locator_prop

    %% PDF Tool registration in ResearchAssistant
    research_assistant_register_tools -.->|"registers"| locate_pdf_tool_class
    research_assistant_register_tools -.->|"registers"| validate_pdf_source_tool_class
    research_assistant_register_tools -.->|"registers"| locate_pdfs_for_query_tool_class

    %% Agent V2 Query Tools Module
    subgraph "File: src/thoth/ingestion/agent_v2/tools/query_tools.py"
        list_queries_tool_class["Class: ListQueriesTool (BaseThothTool)<br/>Tool for listing all research queries"]
        list_queries_tool_run["Method: _run() -> str<br/>List all queries"]

        create_query_input_class["Class: CreateQueryInput (BaseModel)<br/>Input schema for creating a query"]
        create_query_tool_class["Class: CreateQueryTool (BaseThothTool)<br/>Tool for creating a new research query"]
        create_query_tool_run["Method: _run(name: str, description: str, research_question: str, keywords: list[str] | None = None, required_topics: list[str] | None = None, preferred_topics: list[str] | None = None, excluded_topics: list[str] | None = None) -> str<br/>Create a new research query"]

        get_query_tool_class["Class: GetQueryTool (BaseThothTool)<br/>Tool for getting details of a specific query"]
        get_query_tool_run["Method: _run(query_name: str) -> str<br/>Get query details"]

        edit_query_input_class["Class: EditQueryInput (BaseModel)<br/>Input schema for editing a query"]
        edit_query_tool_class["Class: EditQueryTool (BaseThothTool)<br/>Tool for editing an existing research query"]
        edit_query_tool_run["Method: _run(query_name: str, description: str | None = None, research_question: str | None = None, keywords: list[str] | None = None, required_topics: list[str] | None = None, preferred_topics: list[str] | None = None, excluded_topics: list[str] | None = None) -> str<br/>Edit a query"]

        delete_query_tool_class["Class: DeleteQueryTool (BaseThothTool)<br/>Tool for deleting a research query"]
        delete_query_tool_run["Method: _run(query_name: str) -> str<br/>Delete a query"]

        list_queries_tool_class --> list_queries_tool_run
        create_query_tool_class --> create_query_tool_run
        get_query_tool_class --> get_query_tool_run
        edit_query_tool_class --> edit_query_tool_run
        delete_query_tool_class --> delete_query_tool_run
    end

    %% Query Tools relationships
    list_queries_tool_class -.->|"inherits from"| base_thoth_tool_class
    create_query_tool_class -.->|"inherits from"| base_thoth_tool_class
    get_query_tool_class -.->|"inherits from"| base_thoth_tool_class
    edit_query_tool_class -.->|"inherits from"| base_thoth_tool_class
    delete_query_tool_class -.->|"inherits from"| base_thoth_tool_class

    %% Query Tools service usage
    list_queries_tool_run -.->|"uses"| service_manager_query_prop
    create_query_tool_run -.->|"uses"| service_manager_query_prop
    get_query_tool_run -.->|"uses"| service_manager_query_prop
    edit_query_tool_run -.->|"uses"| service_manager_query_prop
    delete_query_tool_run -.->|"uses"| service_manager_query_prop

    %% Query Tool registration in ResearchAssistant
    research_assistant_register_tools -.->|"registers"| list_queries_tool_class
    research_assistant_register_tools -.->|"registers"| create_query_tool_class
    research_assistant_register_tools -.->|"registers"| get_query_tool_class
    research_assistant_register_tools -.->|"registers"| edit_query_tool_class
        research_assistant_register_tools -.->|"registers"| delete_query_tool_class

    %% Agent V2 RAG Tools Module
    subgraph "File: src/thoth/ingestion/agent_v2/tools/rag_tools.py"
        search_knowledge_tool_class["Class: SearchKnowledgeTool (BaseThothTool)<br/>Tool for searching the knowledge base"]
        search_knowledge_tool_run["Method: _run(query: str, k: int = 4, filter: dict[str, Any] | None = None) -> str<br/>Search the knowledge base"]

        ask_question_tool_class["Class: AskQuestionTool (BaseThothTool)<br/>Tool for asking questions about the knowledge base"]
        ask_question_tool_run["Method: _run(query: str, k: int = 4, filter: dict[str, Any] | None = None) -> str<br/>Ask a question"]

        index_knowledge_base_tool_class["Class: IndexKnowledgeBaseTool (BaseThothTool)<br/>Tool for indexing the knowledge base"]
        index_knowledge_base_tool_run["Method: _run() -> str<br/>Index the knowledge base"]

        get_rag_stats_tool_class["Class: GetRAGStatsTool (BaseThothTool)<br/>Tool for getting RAG system statistics"]
        get_rag_stats_tool_run["Method: _run() -> str<br/>Get RAG statistics"]

        clear_rag_index_tool_class["Class: ClearRAGIndexTool (BaseThothTool)<br/>Tool for clearing the RAG index"]
        clear_rag_index_tool_run["Method: _run() -> str<br/>Clear the RAG index"]

        explain_connections_input_class["Class: ExplainConnectionsInput (BaseModel)<br/>Input for explaining connections between papers"]
        explain_connections_tool_class["Class: ExplainConnectionsTool (BaseThothTool)<br/>Explain connections between papers"]
        explain_connections_tool_run["Method: _run(paper1: str, paper2: str) -> str<br/>Explain connections between papers"]

        search_knowledge_tool_class --> search_knowledge_tool_run
        ask_question_tool_class --> ask_question_tool_run
        index_knowledge_base_tool_class --> index_knowledge_base_tool_run
        get_rag_stats_tool_class --> get_rag_stats_tool_run
        clear_rag_index_tool_class --> clear_rag_index_tool_run
        explain_connections_tool_class --> explain_connections_tool_run
    end

    %% RAG Tools relationships
    search_knowledge_tool_class -.->|"inherits from"| base_thoth_tool_class
    ask_question_tool_class -.->|"inherits from"| base_thoth_tool_class
    index_knowledge_base_tool_class -.->|"inherits from"| base_thoth_tool_class
    get_rag_stats_tool_class -.->|"inherits from"| base_thoth_tool_class
    clear_rag_index_tool_class -.->|"inherits from"| base_thoth_tool_class
    explain_connections_tool_class -.->|"inherits from"| base_thoth_tool_class

    %% RAG Tools service usage
    search_knowledge_tool_run -.->|"uses"| service_manager_rag_prop
    ask_question_tool_run -.->|"uses"| service_manager_rag_prop
    index_knowledge_base_tool_run -.->|"uses"| service_manager_rag_prop
    get_rag_stats_tool_run -.->|"uses"| service_manager_rag_prop
    clear_rag_index_tool_run -.->|"uses"| service_manager_rag_prop
    explain_connections_tool_run -.->|"uses"| service_manager_rag_prop

    %% RAG Tool registration in ResearchAssistant
    research_assistant_register_tools -.->|"registers"| search_knowledge_tool_class
    research_assistant_register_tools -.->|"registers"| ask_question_tool_class
    research_assistant_register_tools -.->|"registers"| index_knowledge_base_tool_class
    research_assistant_register_tools -.->|"registers"| get_rag_stats_tool_class
    research_assistant_register_tools -.->|"registers"| clear_rag_index_tool_class
    research_assistant_register_tools -.->|"registers"| explain_connections_tool_class

    %% Agent V2 Web Tools Module
    subgraph "File: src/thoth/ingestion/agent_v2/tools/web_tools.py"
        web_search_input_class["Class: WebSearchInput (BaseModel)<br/>Input schema for web search"]
        web_search_tool_class["Class: WebSearchTool (BaseThothTool)<br/>Tool that performs a general web search"]
        web_search_tool_run["Method: _run(query: str, num_results: int = 5, provider: str | None = None) -> str<br/>Search the web using the configured search API"]

        web_search_tool_class --> web_search_tool_run
    end

    %% Web Tools relationships
    web_search_tool_class -.->|"inherits from"| base_thoth_tool_class

    %% Web Tools service usage
    web_search_tool_run -.->|"uses"| service_manager_web_search_prop

    %% Web Tool registration in ResearchAssistant
    research_assistant_register_tools -.->|"registers"| web_search_tool_class

    %% Knowledge Graph Module
    subgraph "File: src/thoth/knowledge/graph.py"
        citation_reference_class["Class: CitationReference<br/>A reference to a citation in the citation graph"]
        citation_reference_init["Method: __init__(article_id: str, citation: Citation | None = None) -> None<br/>Initialize a citation reference"]
        citation_reference_str["Method: __str__() -> str<br/>String representation of the citation reference"]

        citation_graph_class["Class: CitationGraph<br/>Tracks and manages article citations in a knowledge graph structure"]
        citation_graph_init["Method: __init__(knowledge_base_dir: str | Path, graph_storage_path: str | Path | None = None, note_generator: Any | None = None, pdf_dir: Path | None = None, markdown_dir: Path | None = None, notes_dir: Path | None = None, service_manager: ServiceManager | None = None) -> None<br/>Initialize the CitationGraph"]
        citation_graph_load["Method: _load_graph() -> None<br/>Load the citation graph from storage if it exists"]
        citation_graph_save["Method: _save_graph() -> None<br/>Save the citation graph to storage"]
        citation_graph_generate_id["Method: _generate_article_id(citation: Citation) -> str<br/>Generate a consistent article ID from a citation"]
        citation_graph_add_from_citation["Method: add_article_from_citation(citation: Citation) -> str<br/>Add an article to the citation graph using a Citation object"]
        citation_graph_node_exists["Method: _node_exists(article_id: str) -> bool<br/>Check if an article node exists in the graph"]
        citation_graph_add_article["Method: add_article(article_id: str, metadata: dict[str, Any], obsidian_path: str | None = None, pdf_path: Path | None = None, markdown_path: Path | None = None, analysis: AnalysisResponse | dict[str, Any] | None = None) -> None<br/>Add an article to the citation graph"]
        citation_graph_add_citation["Method: add_citation(source_id: str, target_id: str, citation_data: dict[str, Any] | None = None) -> None<br/>Add a citation relationship between two articles"]
        citation_graph_process_citations["Method: process_citations(pdf_path: Path, markdown_path: Path, analysis: AnalysisResponse, citations: list[Citation]) -> str | None<br/>Process a list of citations for an article"]
        citation_graph_get_citation["Method: get_citation(article_id: str) -> Citation | None<br/>Get a Citation object for an article"]
        citation_graph_get_citing["Method: get_citing_articles(article_id: str) -> list[str]<br/>Get articles that cite the specified article"]
        citation_graph_get_cited["Method: get_cited_articles(article_id: str) -> list[str]<br/>Get articles cited by the specified article"]
        citation_graph_get_obsidian_path["Method: get_obsidian_path(article_id: str) -> str | None<br/>Get the Obsidian markdown path for an article if it exists"]
        citation_graph_get_metadata["Method: get_article_metadata(article_id: str) -> dict[str, Any]<br/>Get metadata for an article"]
        citation_graph_search["Method: search_articles(query: str) -> list[str]<br/>Search for articles by title or author"]
        citation_graph_get_network["Method: get_citation_network(article_id: str, depth: int = 1) -> nx.DiGraph<br/>Get the citation network around an article"]
        citation_graph_update_links["Method: update_obsidian_links(article_id: str) -> None<br/>Update Obsidian markdown links for an article's citations"]
        citation_graph_sanitize_title["Method: _sanitize_title(title: str) -> str<br/>Create a sanitized ID from a title"]
        citation_graph_get_regen_data["Method: get_article_data_for_regeneration(article_id: str) -> dict[str, Any] | None<br/>Retrieve all necessary data for an article to regenerate its note"]
        citation_graph_update_paths["Method: update_article_file_paths(article_id: str, new_pdf_path: Path, new_markdown_path: Path) -> None<br/>Update the stored PDF and Markdown paths for an article in the graph"]
        citation_graph_regenerate_all["Method: regenerate_all_notes() -> list[tuple[Path, Path]]<br/>Regenerate all markdown notes for all articles in the graph"]
        citation_graph_update_attributes["Method: update_node_attributes(attribute_name: str, id_to_value_mapping: dict[str, Any]) -> None<br/>Update or add a specific attribute for multiple nodes in the graph"]

        citation_reference_class --> citation_reference_init
        citation_reference_class --> citation_reference_str

        citation_graph_class --> citation_graph_init
        citation_graph_class --> citation_graph_load
        citation_graph_class --> citation_graph_save
        citation_graph_class --> citation_graph_generate_id
        citation_graph_class --> citation_graph_add_from_citation
        citation_graph_class --> citation_graph_node_exists
        citation_graph_class --> citation_graph_add_article
        citation_graph_class --> citation_graph_add_citation
        citation_graph_class --> citation_graph_process_citations
        citation_graph_class --> citation_graph_get_citation
        citation_graph_class --> citation_graph_get_citing
        citation_graph_class --> citation_graph_get_cited
        citation_graph_class --> citation_graph_get_obsidian_path
        citation_graph_class --> citation_graph_get_metadata
        citation_graph_class --> citation_graph_search
        citation_graph_class --> citation_graph_get_network
        citation_graph_class --> citation_graph_update_links
        citation_graph_class --> citation_graph_sanitize_title
        citation_graph_class --> citation_graph_get_regen_data
        citation_graph_class --> citation_graph_update_paths
        citation_graph_class --> citation_graph_regenerate_all
        citation_graph_class --> citation_graph_update_attributes
    end

    %% CitationGraph internal method calls
    citation_graph_init -.->|"calls"| citation_graph_load
    citation_graph_add_from_citation -.->|"calls"| citation_graph_generate_id
    citation_graph_add_from_citation -.->|"calls"| citation_graph_add_article
    citation_graph_process_citations -.->|"calls"| citation_graph_generate_id
    citation_graph_process_citations -.->|"calls"| citation_graph_add_article
    citation_graph_process_citations -.->|"calls"| citation_graph_add_from_citation
    citation_graph_process_citations -.->|"calls"| citation_graph_add_citation
    citation_graph_process_citations -.->|"calls"| citation_graph_get_citing
    citation_graph_process_citations -.->|"calls"| citation_graph_get_cited
    citation_graph_process_citations -.->|"calls"| citation_graph_get_regen_data
    citation_graph_regenerate_all -.->|"calls"| citation_graph_get_regen_data
    citation_graph_regenerate_all -.->|"calls"| citation_graph_update_attributes
    citation_graph_regenerate_all -.->|"calls"| citation_graph_save
    citation_graph_add_article -.->|"calls"| citation_graph_save
    citation_graph_add_citation -.->|"calls"| citation_graph_save
    citation_graph_update_paths -.->|"calls"| citation_graph_save
    citation_graph_get_citation -.->|"calls"| citation_graph_node_exists
    citation_graph_get_citing -.->|"calls"| citation_graph_node_exists
    citation_graph_get_cited -.->|"calls"| citation_graph_node_exists
    citation_graph_get_obsidian_path -.->|"calls"| citation_graph_node_exists
    citation_graph_get_metadata -.->|"calls"| citation_graph_node_exists
    citation_graph_get_network -.->|"calls"| citation_graph_node_exists
    citation_graph_update_links -.->|"calls"| citation_graph_get_obsidian_path
    citation_graph_update_links -.->|"calls"| citation_graph_get_cited
    citation_graph_update_links -.->|"calls"| citation_graph_get_citation

    %% CitationGraph external dependencies
    citation_graph_class -.->|"uses"| service_manager_class
    citation_graph_process_citations -.->|"calls"| service_manager_note_prop
    citation_graph_regenerate_all -.->|"calls"| service_manager_note_prop

    %% Pipeline uses CitationGraph
    pipeline_class -.->|"creates and uses"| citation_graph_class

    %% RAG Module Entry Point
    subgraph "File: src/thoth/rag/__init__.py"
        rag_init_module["Module: RAG Package Init<br/>Entry point for RAG package with public API exports"]
        rag_init_import_embedding["Import: EmbeddingManager<br/>from .embeddings"]
        rag_init_import_rag_manager["Import: RAGManager<br/>from .rag_manager"]
        rag_init_import_vector_store["Import: VectorStoreManager<br/>from .vector_store"]
        rag_init_all["__all__ = ['EmbeddingManager', 'RAGManager', 'VectorStoreManager']<br/>Public API definition"]

        rag_init_module --> rag_init_import_embedding
        rag_init_module --> rag_init_import_rag_manager
        rag_init_module --> rag_init_import_vector_store
        rag_init_module --> rag_init_all
    end

    %% RAG Embeddings Module
    subgraph "File: src/thoth/rag/embeddings.py"
        embedding_manager_class["Class: EmbeddingManager<br/>Manages document embeddings for the RAG system"]
        embedding_manager_init["Method: __init__(model: str | None = None, openrouter_api_key: str | None = None, base_url: str | None = None) -> None<br/>Initialize the embedding manager"]
        embedding_manager_init_embeddings["Method: _init_embeddings() -> None<br/>Initialize the embeddings model using sentence-transformers"]
        embedding_manager_embed_documents["Method: embed_documents(texts: list[str]) -> list[list[float]]<br/>Create embeddings for a list of documents"]
        embedding_manager_embed_query["Method: embed_query(text: str) -> list[float]<br/>Create embedding for a single query text"]
        embedding_manager_get_model["Method: get_embedding_model() -> Any<br/>Get the underlying embeddings model for use with LangChain"]

        embedding_manager_class --> embedding_manager_init
        embedding_manager_class --> embedding_manager_init_embeddings
        embedding_manager_class --> embedding_manager_embed_documents
        embedding_manager_class --> embedding_manager_embed_query
        embedding_manager_class --> embedding_manager_get_model
    end

    %% EmbeddingManager internal method calls
    embedding_manager_init -.->|"calls"| embedding_manager_init_embeddings

    %% RAG __init__ imports EmbeddingManager
    rag_init_import_embedding -.->|"imports"| embedding_manager_class

    %% RAG Manager Module
    subgraph "File: src/thoth/rag/rag_manager.py"
        rag_manager_class["Class: RAGManager<br/>Main manager for the RAG system"]
        rag_manager_init["Method: __init__(embedding_model: str | None = None, llm_model: str | None = None, collection_name: str | None = None, vector_db_path: str | Path | None = None, chunk_size: int | None = None, chunk_overlap: int | None = None, chunk_encoding: str | None = None, openrouter_api_key: str | None = None) -> None<br/>Initialize the RAG manager"]
        rag_manager_init_components["Method: _init_components() -> None<br/>Initialize all RAG components"]
        rag_manager_index_file["Method: index_markdown_file(file_path: Path) -> list[str]<br/>Index a markdown file into the vector store"]
        rag_manager_index_directory["Method: index_directory(directory: Path, pattern: str = '*.md', recursive: bool = True) -> dict[str, list[str]]<br/>Index all markdown files in a directory"]
        rag_manager_search["Method: search(query: str, k: int = 4, filter: dict[str, Any] | None = None, return_scores: bool = False) -> list[Document] | list[tuple[Document, float]]<br/>Search for relevant documents"]
        rag_manager_answer_question["Method: answer_question(question: str, k: int = 4, filter: dict[str, Any] | None = None, return_sources: bool = True) -> dict[str, Any]<br/>Answer a question using the RAG system"]
        rag_manager_get_stats["Method: get_stats() -> dict[str, Any]<br/>Get statistics about the RAG system"]
        rag_manager_clear_index["Method: clear_index() -> None<br/>Clear the entire vector index"]
        rag_manager_extract_metadata["Method: _extract_metadata_from_path(file_path: Path) -> dict[str, Any]<br/>Extract metadata from file path and name"]

        rag_manager_class --> rag_manager_init
        rag_manager_class --> rag_manager_init_components
        rag_manager_class --> rag_manager_index_file
        rag_manager_class --> rag_manager_index_directory
        rag_manager_class --> rag_manager_search
        rag_manager_class --> rag_manager_answer_question
        rag_manager_class --> rag_manager_get_stats
        rag_manager_class --> rag_manager_clear_index
        rag_manager_class --> rag_manager_extract_metadata
    end

    %% RAGManager internal method calls
    rag_manager_init -.->|"calls"| rag_manager_init_components
    rag_manager_index_file -.->|"calls"| rag_manager_extract_metadata
    rag_manager_index_directory -.->|"calls"| rag_manager_index_file

    %% RAGManager creates and uses RAG components
    rag_manager_init_components -.->|"creates"| embedding_manager_class
    rag_manager_init_components -.->|"creates"| vector_store_manager_class
    rag_manager_init_components -.->|"creates"| openrouter_client_class

    %% RAG __init__ imports RAGManager
    rag_init_import_rag_manager -.->|"imports"| rag_manager_class

    %% RAG Vector Store Module
    subgraph "File: src/thoth/rag/vector_store.py"
        vector_store_manager_class["Class: VectorStoreManager<br/>Manages the vector store for document embeddings"]
        vector_store_manager_init["Method: __init__(collection_name: str | None = None, persist_directory: str | Path | None = None, embedding_function: Any | None = None) -> None<br/>Initialize the vector store manager"]
        vector_store_manager_init_client["Method: _init_client() -> None<br/>Initialize the ChromaDB client"]
        vector_store_manager_init_store["Method: _init_vector_store() -> None<br/>Initialize the vector store"]
        vector_store_manager_add_documents["Method: add_documents(documents: list[Document], ids: list[str] | None = None) -> list[str]<br/>Add documents to the vector store"]
        vector_store_manager_similarity_search["Method: similarity_search(query: str, k: int = 4, filter: dict[str, Any] | None = None) -> list[Document]<br/>Perform similarity search on the vector store"]
        vector_store_manager_search_with_score["Method: similarity_search_with_score(query: str, k: int = 4, filter: dict[str, Any] | None = None) -> list[tuple[Document, float]]<br/>Perform similarity search with relevance scores"]
        vector_store_manager_delete_documents["Method: delete_documents(ids: list[str]) -> None<br/>Delete documents from the vector store by ID"]
        vector_store_manager_get_all["Method: get_all_documents() -> list[Document]<br/>Get all documents from the vector store"]
        vector_store_manager_clear_collection["Method: clear_collection() -> None<br/>Clear all documents from the current collection"]
        vector_store_manager_get_stats["Method: get_collection_stats() -> dict[str, Any]<br/>Get statistics about the current collection"]
        vector_store_manager_get_retriever["Method: get_retriever(**kwargs) -> Any<br/>Get a retriever instance for use with LangChain"]

        vector_store_manager_class --> vector_store_manager_init
        vector_store_manager_class --> vector_store_manager_init_client
        vector_store_manager_class --> vector_store_manager_init_store
        vector_store_manager_class --> vector_store_manager_add_documents
        vector_store_manager_class --> vector_store_manager_similarity_search
        vector_store_manager_class --> vector_store_manager_search_with_score
        vector_store_manager_class --> vector_store_manager_delete_documents
        vector_store_manager_class --> vector_store_manager_get_all
        vector_store_manager_class --> vector_store_manager_clear_collection
        vector_store_manager_class --> vector_store_manager_get_stats
        vector_store_manager_class --> vector_store_manager_get_retriever
    end

    %% VectorStoreManager internal method calls
    vector_store_manager_init -.->|"calls"| vector_store_manager_init_client
    vector_store_manager_init -.->|"calls"| vector_store_manager_init_store
    vector_store_manager_clear_collection -.->|"calls"| vector_store_manager_init_store

    %% RAG __init__ imports VectorStoreManager
    rag_init_import_vector_store -.->|"imports"| vector_store_manager_class

    %% Server Module Entry Point
    subgraph "File: src/thoth/server/__init__.py"
        server_init_module["Module: Server Package Init<br/>Entry point for server package with public API exports"]
        server_init_import_start_server["Import: start_server<br/>from .api_server"]
        server_init_import_pdf_monitor["Import: PDFMonitor<br/>from .pdf_monitor"]
        server_init_all["__all__ = ['PDFMonitor', 'start_server']<br/>Public API definition"]

        server_init_module --> server_init_import_start_server
        server_init_module --> server_init_import_pdf_monitor
        server_init_module --> server_init_all
    end

    %% Server __init__ imports
    server_init_import_start_server -.->|"imports"| start_server_func
    server_init_import_pdf_monitor -.->|"imports"| pdf_monitor_class

    %% Server API Module
    subgraph "File: src/thoth/server/api_server.py"
        chat_request_class["Class: ChatRequest (BaseModel)<br/>Request model for chat endpoint"]
        chat_response_class["Class: ChatResponse (BaseModel)<br/>Response model for chat endpoint"]
        research_request_class["Class: ResearchRequest (BaseModel)<br/>Request model for research endpoint"]
        research_response_class["Class: ResearchResponse (BaseModel)<br/>Response model for research endpoint"]
        config_update_request_class["Class: ConfigUpdateRequest (BaseModel)<br/>Request model for updating configuration"]
        agent_restart_request_class["Class: AgentRestartRequest (BaseModel)<br/>Request model for restarting the agent"]

        health_check_func["Function: health_check() -> JSONResponse<br/>Health check endpoint"]
        download_pdf_endpoint_func["Function: download_pdf_endpoint(url: str) -> JSONResponse<br/>Download a PDF from a URL and save it to the configured directory"]
        view_markdown_func["Function: view_markdown(path: str) -> JSONResponse<br/>View the contents of a markdown file"]
        research_chat_func["Function: research_chat(request: ChatRequest) -> ChatResponse<br/>Chat endpoint for the research assistant"]
        research_query_func["Function: research_query(request: ResearchRequest) -> ResearchResponse<br/>Direct research query endpoint for quick research tasks"]
        agent_status_func["Function: agent_status() -> JSONResponse<br/>Agent status endpoint for Obsidian plugin health checks"]
        list_agent_tools_func["Function: list_agent_tools() -> JSONResponse<br/>List all available tools for the research agent"]
        get_agent_config_func["Function: get_agent_config() -> JSONResponse<br/>Get current agent configuration"]
        update_agent_config_func["Function: update_agent_config(request: ConfigUpdateRequest) -> JSONResponse<br/>Update agent configuration dynamically"]
        restart_agent_func["Function: restart_agent(request: AgentRestartRequest) -> JSONResponse<br/>Restart the agent process"]
        delayed_shutdown_func["Function: delayed_shutdown() -> None<br/>Shutdown the process after a short delay"]
        reinitialize_agent_func["Function: reinitialize_agent() -> None<br/>Reinitialize the agent without restarting the process"]
        sync_obsidian_settings_func["Function: sync_obsidian_settings(settings: dict) -> JSONResponse<br/>Sync settings from Obsidian plugin to backend"]
        start_server_func["Function: start_server(host: str, port: int, pdf_directory: Path, notes_directory: Path, api_base_url: str, pipeline: Any | None = None, reload: bool = False) -> None<br/>Start the FastAPI server with research agent integration"]
    end

    %% API Server internal method calls
    start_server_func -.->|"calls"| reinitialize_agent_func
    restart_agent_func -.->|"calls"| update_agent_config_func
    restart_agent_func -.->|"calls"| delayed_shutdown_func
    research_chat_func -.->|"uses"| llm_router_class
    research_query_func -.->|"uses"| research_assistant_class

    %% API Server external dependencies
    download_pdf_endpoint_func -.->|"calls"| download_pdf_func
    start_server_func -.->|"creates"| research_assistant_class
    start_server_func -.->|"creates"| llm_router_class
    research_chat_func -.->|"calls"| llm_router_select_model
    reinitialize_agent_func -.->|"calls"| create_research_assistant_func

    %% Server PDF Monitor Module
    subgraph "File: src/thoth/server/pdf_monitor.py"
        pdf_tracker_class["Class: PDFTracker<br/>Persistent tracker for processed PDF files"]
        pdf_tracker_init["Method: __init__(track_file: Path | None = None) -> None<br/>Initialize the PDF tracker"]
        pdf_tracker_load_files["Method: _load_tracked_files() -> None<br/>Load the list of tracked files from disk"]
        pdf_tracker_save_files["Method: _save_tracked_files() -> None<br/>Save the list of tracked files to disk"]
        pdf_tracker_is_processed["Method: is_processed(file_path: Path) -> bool<br/>Check if a file has been processed"]
        pdf_tracker_get_note_path["Method: get_note_path(file_path: Path) -> Path | None<br/>Get the note path for a processed file"]
        pdf_tracker_mark_processed["Method: mark_processed(file_path: Path, metadata: dict | None = None) -> None<br/>Mark a file as processed"]
        pdf_tracker_verify_unchanged["Method: verify_file_unchanged(file_path: Path) -> bool<br/>Verify that a file hasn't changed since it was processed"]

        pdf_handler_class["Class: PDFHandler (FileSystemEventHandler)<br/>Handler for PDF file events"]
        pdf_handler_init["Method: __init__(pipeline: ThothPipeline) -> None<br/>Initialize the PDF handler"]
        pdf_handler_on_created["Method: on_created(event) -> None<br/>Handle file creation events"]

        pdf_monitor_class["Class: PDFMonitor<br/>Monitor for PDF files"]
        pdf_monitor_init["Method: __init__(watch_dir: Path | None = None, pipeline: Optional[ThothPipeline] = None, polling_interval: float = 1.0, recursive: bool = False) -> None<br/>Initialize the PDF monitor"]
        pdf_monitor_start["Method: start() -> None<br/>Start monitoring the directory"]
        pdf_monitor_stop["Method: stop() -> None<br/>Stop monitoring the directory"]
        pdf_monitor_process_existing["Method: _process_existing_files() -> None<br/>Process any existing PDF files in the watch directory"]

        pdf_tracker_class --> pdf_tracker_init
        pdf_tracker_class --> pdf_tracker_load_files
        pdf_tracker_class --> pdf_tracker_save_files
        pdf_tracker_class --> pdf_tracker_is_processed
        pdf_tracker_class --> pdf_tracker_get_note_path
        pdf_tracker_class --> pdf_tracker_mark_processed
        pdf_tracker_class --> pdf_tracker_verify_unchanged

        pdf_handler_class --> pdf_handler_init
        pdf_handler_class --> pdf_handler_on_created

        pdf_monitor_class --> pdf_monitor_init
        pdf_monitor_class --> pdf_monitor_start
        pdf_monitor_class --> pdf_monitor_stop
        pdf_monitor_class --> pdf_monitor_process_existing
    end

    %% PDF Monitor internal method calls
    pdf_tracker_init -.->|"calls"| pdf_tracker_load_files
    pdf_tracker_mark_processed -.->|"calls"| pdf_tracker_save_files
    pdf_monitor_start -.->|"calls"| pdf_monitor_process_existing
    pdf_monitor_process_existing -.->|"calls"| pipeline_process_pdf
    pdf_handler_on_created -.->|"calls"| pipeline_process_pdf

    %% PDF Monitor uses pipeline
    pdf_monitor_class -.->|"uses"| pipeline_class
    pdf_handler_class -.->|"uses"| pipeline_class

    %% Utilities Module Entry Point
    subgraph "File: src/thoth/utilities/__init__.py"
        utilities_init_module["Module: Utilities Package Init<br/>Entry point for utilities package with public API exports"]
        utilities_init_import_openrouter["Import: OpenRouterClient, OpenRouterRateLimiter<br/>from .openrouter"]
        utilities_init_import_openai["Import: OpenAIClient<br/>from .openai_client"]
        utilities_init_import_anthropic["Import: AnthropicClient<br/>from .anthropic_client"]
        utilities_init_all["__all__ = ['OpenRouterClient', 'OpenRouterRateLimiter', 'OpenAIClient', 'AnthropicClient']<br/>Public API definition"]

        utilities_init_module --> utilities_init_import_openrouter
        utilities_init_module --> utilities_init_import_openai
        utilities_init_module --> utilities_init_import_anthropic
        utilities_init_module --> utilities_init_all
    end

    %% Utilities Anthropic Client Module
    subgraph "File: src/thoth/utilities/anthropic_client.py"
        anthropic_client_class["Class: AnthropicClient (ChatAnthropic)<br/>Client for the native Anthropic API"]
        anthropic_client_custom_attributes["Class Attribute: custom_attributes: ClassVar[dict[str, Any]]<br/>Store custom non-Pydantic attributes"]
        anthropic_client_init["Method: __init__(api_key: str | None = None, model: str = 'claude-3-sonnet-20240229', temperature: float = 0.7, max_tokens: int | None = None, streaming: bool = False, use_rate_limiter: bool = True, requests_per_second: float = 10.0, **kwargs: Any) -> None<br/>Initialize the Anthropic client"]
        anthropic_client_generate["Method: _generate(*args, **kwargs)<br/>Generate method with rate limiting"]

        anthropic_client_class --> anthropic_client_custom_attributes
        anthropic_client_class --> anthropic_client_init
        anthropic_client_class --> anthropic_client_generate
    end

    %% AnthropicClient internal method calls
    anthropic_client_init -.->|"calls"| chat_anthropic_init["ChatAnthropic.__init__"]
    anthropic_client_generate -.->|"calls"| chat_anthropic_generate["ChatAnthropic._generate"]

    %% AnthropicClient inheritance
    anthropic_client_class -.->|"inherits from"| chat_anthropic_base["ChatAnthropic"]

    %% Utilities __init__ imports AnthropicClient
    utilities_init_import_anthropic -.->|"imports"| anthropic_client_class

    %% Utilities OpenAI Client Module
    subgraph "File: src/thoth/utilities/openai_client.py"
        openai_client_class["Class: OpenAIClient (ChatOpenAI)<br/>Client for the native OpenAI API"]
        openai_client_custom_attributes["Class Attribute: custom_attributes: ClassVar[dict[str, Any]]<br/>Store custom non-Pydantic attributes"]
        openai_client_init["Method: __init__(api_key: str | None = None, model: str = 'gpt-4o', temperature: float = 0.7, max_tokens: int | None = None, streaming: bool = False, use_rate_limiter: bool = True, requests_per_second: float = 10.0, **kwargs: Any) -> None<br/>Initialize the OpenAI client"]
        openai_client_generate["Method: _generate(*args, **kwargs)<br/>Generate method with rate limiting"]

        openai_client_class --> openai_client_custom_attributes
        openai_client_class --> openai_client_init
        openai_client_class --> openai_client_generate
    end

    %% OpenAIClient internal method calls
    openai_client_init -.->|"calls"| chat_openai_init["ChatOpenAI.__init__"]
    openai_client_generate -.->|"calls"| chat_openai_generate["ChatOpenAI._generate"]

    %% OpenAIClient inheritance
    openai_client_class -.->|"inherits from"| chat_openai_base["ChatOpenAI"]

    %% Utilities __init__ imports OpenAIClient
    utilities_init_import_openai -.->|"imports"| openai_client_class

    %% Utilities OpenRouter Module
    subgraph "File: src/thoth/utilities/openrouter.py"
        get_openrouter_models_func["Function: get_openrouter_models() -> list[dict[str, Any]]<br/>Fetch and cache the list of models from OpenRouter"]

        openrouter_error_class["Class: OpenRouterError (Exception)<br/>Exception raised for errors in the OpenRouter API"]

        openrouter_rate_limiter_class["Class: OpenRouterRateLimiter<br/>Rate limiter for the OpenRouter API based on available credits"]
        openrouter_rate_limiter_init["Method: __init__(api_key: str, max_surge_limit: int = 500, min_requests_per_second: float = 1.0, check_interval: float = 0.1) -> None<br/>Initialize the OpenRouter rate limiter"]
        openrouter_rate_limiter_get_credits["Method: _get_credits() -> float | None<br/>Get the available credits for the API key"]
        openrouter_rate_limiter_setup["Method: setup() -> None<br/>Set up the rate limiter based on the available credits"]
        openrouter_rate_limiter_acquire["Method: acquire() -> None<br/>Acquire permission to make a request"]
        openrouter_rate_limiter_get_langchain["Method: get_langchain_limiter()<br/>Get the underlying LangChain InMemoryRateLimiter"]

        openrouter_client_class["Class: OpenRouterClient (ChatOpenAI)<br/>Client for the OpenRouter API leveraging the OpenAI API"]
        openrouter_client_custom_attributes["Class Attribute: custom_attributes: ClassVar[dict[str, Any]]<br/>Store custom non-Pydantic attributes"]
        openrouter_client_init["Method: __init__(api_key: str | None = None, model: str | list[str] = 'openai/gpt-4', temperature: float = 0.7, max_tokens: int | None = None, site_url: str | None = None, site_name: str | None = None, streaming: bool = False, use_rate_limiter: bool = True, **kwargs: Any) -> None<br/>Initialize the OpenRouter client"]
        openrouter_client_generate["Method: _generate(*args, **kwargs)<br/>Synchronous method for generating completions with rate limiting"]

        openrouter_rate_limiter_class --> openrouter_rate_limiter_init
        openrouter_rate_limiter_class --> openrouter_rate_limiter_get_credits
        openrouter_rate_limiter_class --> openrouter_rate_limiter_setup
        openrouter_rate_limiter_class --> openrouter_rate_limiter_acquire
        openrouter_rate_limiter_class --> openrouter_rate_limiter_get_langchain

        openrouter_client_class --> openrouter_client_custom_attributes
        openrouter_client_class --> openrouter_client_init
        openrouter_client_class --> openrouter_client_generate
    end

    %% OpenRouter internal method calls
    openrouter_rate_limiter_setup -.->|"calls"| openrouter_rate_limiter_get_credits
    openrouter_rate_limiter_acquire -.->|"calls"| openrouter_rate_limiter_setup
    openrouter_rate_limiter_get_langchain -.->|"calls"| openrouter_rate_limiter_setup
    openrouter_client_init -.->|"creates"| openrouter_rate_limiter_class
    openrouter_client_generate -.->|"calls"| openrouter_rate_limiter_acquire

    %% OpenRouterClient inheritance
    openrouter_client_class -.->|"inherits from"| chat_openai_base

    %% Utilities __init__ imports OpenRouter classes
    utilities_init_import_openrouter -.->|"imports"| openrouter_client_class
    utilities_init_import_openrouter -.->|"imports"| openrouter_rate_limiter_class

    %% Utilities Configuration Module
    subgraph "File: src/thoth/utilities/config.py"
        api_keys_config_class["Class: APIKeys (BaseSettings)<br/>API keys for external services"]
        model_config_class["Class: ModelConfig (BaseSettings)<br/>Configuration for models"]
        llm_config_class["Class: LLMConfig (BaseSettings)<br/>Configuration for LLM"]
        query_routing_config_class["Class: QueryBasedRoutingConfig (BaseSettings)<br/>Configuration for query-based model routing"]
        citation_llm_config_class["Class: CitationLLMConfig (BaseSettings)<br/>Configuration for citation processing LLM"]
        tag_consolidator_llm_config_class["Class: TagConsolidatorLLMConfig (BaseSettings)<br/>Configuration for tag consolidation LLM"]
        citation_config_class["Class: CitationConfig (BaseSettings)<br/>Configuration for citations"]
        endpoint_config_class["Class: EndpointConfig (BaseSettings)<br/>Configuration for endpoints"]
        monitor_config_class["Class: MonitorConfig (BaseSettings)<br/>Configuration for the monitor"]
        research_agent_llm_config_class["Class: ResearchAgentLLMConfig (BaseSettings)<br/>Configuration for research agent LLM"]
        scrape_filter_llm_config_class["Class: ScrapeFilterLLMConfig (BaseSettings)<br/>Configuration for scrape filtering LLM"]
        discovery_config_class["Class: DiscoveryConfig (BaseSettings)<br/>Configuration for the discovery system"]
        research_agent_config_class["Class: ResearchAgentConfig (BaseSettings)<br/>Configuration for the research agent"]
        rag_config_class["Class: RAGConfig (BaseSettings)<br/>Configuration for the RAG system"]
        logging_config_class["Class: LoggingConfig (BaseSettings)<br/>Configuration for logging"]
        thoth_config_class["Class: ThothConfig (BaseSettings)<br/>Main configuration for Thoth"]
        thoth_config_setup_logging["Method: setup_logging() -> None<br/>Set up logging configuration using loguru"]

        load_config_func["Function: load_config() -> ThothConfig<br/>Load the configuration"]
        get_config_func["Function: get_config() -> ThothConfig<br/>Get the configuration"]
        setup_logging_func["Function: setup_logging(config: ThothConfig) -> None<br/>Set up logging configuration using loguru"]

        thoth_config_class --> thoth_config_setup_logging
    end

    %% Configuration internal method calls
    thoth_config_setup_logging -.->|"calls"| setup_logging_func
    load_config_func -.->|"creates"| thoth_config_class
    load_config_func -.->|"calls"| thoth_config_setup_logging
    get_config_func -.->|"calls"| load_config_func

    %% Configuration inheritance relationships
    api_keys_config_class -.->|"inherits from"| base_settings_class["BaseSettings"]
    model_config_class -.->|"inherits from"| base_settings_class
    llm_config_class -.->|"inherits from"| base_settings_class
    query_routing_config_class -.->|"inherits from"| base_settings_class
    citation_llm_config_class -.->|"inherits from"| base_settings_class
    tag_consolidator_llm_config_class -.->|"inherits from"| base_settings_class
    citation_config_class -.->|"inherits from"| base_settings_class
    endpoint_config_class -.->|"inherits from"| base_settings_class
    monitor_config_class -.->|"inherits from"| base_settings_class
    research_agent_llm_config_class -.->|"inherits from"| base_settings_class
    scrape_filter_llm_config_class -.->|"inherits from"| base_settings_class
    discovery_config_class -.->|"inherits from"| base_settings_class
    research_agent_config_class -.->|"inherits from"| base_settings_class
    rag_config_class -.->|"inherits from"| base_settings_class
    logging_config_class -.->|"inherits from"| base_settings_class
    thoth_config_class -.->|"inherits from"| base_settings_class

    %% ThothConfig aggregates other configs
    thoth_config_class -.->|"contains"| api_keys_config_class
    thoth_config_class -.->|"contains"| llm_config_class
    thoth_config_class -.->|"contains"| citation_llm_config_class
    thoth_config_class -.->|"contains"| tag_consolidator_llm_config_class
    thoth_config_class -.->|"contains"| citation_config_class
    thoth_config_class -.->|"contains"| endpoint_config_class
    thoth_config_class -.->|"contains"| monitor_config_class
    thoth_config_class -.->|"contains"| research_agent_llm_config_class
    thoth_config_class -.->|"contains"| scrape_filter_llm_config_class
    thoth_config_class -.->|"contains"| discovery_config_class
    thoth_config_class -.->|"contains"| research_agent_config_class
    thoth_config_class -.->|"contains"| rag_config_class
    thoth_config_class -.->|"contains"| logging_config_class
    thoth_config_class -.->|"contains"| query_routing_config_class

    %% Utilities Web Search Module
    subgraph "File: src/thoth/utilities/web_search.py"
        serper_client_class["Class: SerperClient<br/>Client for performing web searches via the Serper.dev API"]
        serper_client_init["Method: __init__(api_key: str, base_url: str = 'https://google.serper.dev') -> None<br/>Initialize the Serper client"]
        serper_client_search["Method: search(query: str, num_results: int = 5) -> list[SearchResult]<br/>Perform a web search and return results"]
        serper_client_close["Method: close() -> None<br/>Close the HTTP client"]

        duckduckgo_client_class["Class: DuckDuckGoClient<br/>Client for performing searches via DuckDuckGo"]
        duckduckgo_client_search["Method: search(query: str, num_results: int = 5) -> list[SearchResult]<br/>Perform searches via DuckDuckGo"]

        scrape_search_client_class["Class: ScrapeSearchClient<br/>Fallback client that scrapes DuckDuckGo HTML results"]
        scrape_search_client_init["Method: __init__(base_url: str = 'https://duckduckgo.com/html/') -> None<br/>Initialize the scrape search client"]
        scrape_search_client_search["Method: search(query: str, num_results: int = 5) -> list[SearchResult]<br/>Scrape DuckDuckGo HTML results"]
        scrape_search_client_close["Method: close() -> None<br/>Close the HTTP client"]

        serper_client_class --> serper_client_init
        serper_client_class --> serper_client_search
        serper_client_class --> serper_client_close

        duckduckgo_client_class --> duckduckgo_client_search

        scrape_search_client_class --> scrape_search_client_init
        scrape_search_client_class --> scrape_search_client_search
        scrape_search_client_class --> scrape_search_client_close
    end

    %% Web search clients return SearchResult
    serper_client_search -.->|"returns"| search_result_schema_class["SearchResult"]
    duckduckgo_client_search -.->|"returns"| search_result_schema_class
    scrape_search_client_search -.->|"returns"| search_result_schema_class

    %% Utilities Schemas Module Entry Point
    subgraph "File: src/thoth/utilities/schemas/__init__.py"
        schemas_init_module["Module: Schemas Package Init<br/>Entry point for schemas package with comprehensive data model exports"]
        schemas_init_import_analysis["Import: AnalysisResponse, AnalysisState<br/>from .analysis"]
        schemas_init_import_citations["Import: ArxivPaper, Citation, CitationExtraction, CitationExtractionResponse, Citations, OpenCitation, OpenCitationsResponse, ReferencesSection<br/>from .citations"]
        schemas_init_import_discovery["Import: BrowserRecording, ChromeExtensionConfig, DiscoveryResult, DiscoverySource, ScheduleConfig, ScrapeConfiguration, ScrapedArticleMetadata<br/>from .discovery"]
        schemas_init_import_queries["Import: FilterLogEntry, PreDownloadEvaluationResponse, QueryEvaluationResponse, QueryRefinementSuggestion, Recommendation, ResearchAgentState, ResearchQuery<br/>from .queries"]
        schemas_init_import_search["Import: SearchResponse, SearchResult<br/>from .search"]
        schemas_init_import_tags["Import: ConsolidatedTagsResponse, SingleTagMappingResponse, TagConsolidationResponse, TagSuggestionResponse<br/>from .tags"]
        schemas_init_all["__all__ = [36 schema classes]<br/>Public API definition for all data models"]

        schemas_init_module --> schemas_init_import_analysis
        schemas_init_module --> schemas_init_import_citations
        schemas_init_module --> schemas_init_import_discovery
        schemas_init_module --> schemas_init_import_queries
        schemas_init_module --> schemas_init_import_search
        schemas_init_module --> schemas_init_import_tags
        schemas_init_module --> schemas_init_all
    end

    %% Schema Files Summary
    subgraph "Utilities Schema Files (Pydantic Models)"
        analysis_response_schema["Class: AnalysisResponse (BaseModel)<br/>Comprehensive paper analysis model with 20+ fields"]
        analysis_response_normalize_tags["Method: normalize_tags() (field_validator)<br/>Normalize tag format with # prefix"]
        analysis_state_schema["Class: AnalysisState (TypedDict)<br/>LangGraph workflow state management"]

        citation_schema["Class: Citation (BaseModel)<br/>Core citation data model"]
        arxiv_paper_schema["Class: ArxivPaper (BaseModel)<br/>ArXiv paper metadata"]
        citation_extraction_schema["Class: CitationExtraction (BaseModel)<br/>LLM extraction results"]

        discovery_source_schema["Class: DiscoverySource (BaseModel)<br/>Discovery source configuration"]
        scraped_article_metadata_schema["Class: ScrapedArticleMetadata (BaseModel)<br/>Web scraping results"]

        research_query_schema["Class: ResearchQuery (BaseModel)<br/>Research query definition"]
        query_evaluation_response_schema["Class: QueryEvaluationResponse (BaseModel)<br/>Article evaluation results"]

        search_result_schema_class["Class: SearchResult (BaseModel)<br/>Web search result"]
        search_response_schema["Class: SearchResponse (BaseModel)<br/>Web search response"]

        tag_consolidation_response_schema["Class: TagConsolidationResponse (BaseModel)<br/>Tag consolidation results"]
        tag_suggestion_response_schema["Class: TagSuggestionResponse (BaseModel)<br/>Tag suggestion results"]

        analysis_response_schema --> analysis_response_normalize_tags
    end

    %% Schema imports
    schemas_init_import_analysis -.->|"imports"| analysis_response_schema
    schemas_init_import_analysis -.->|"imports"| analysis_state_schema
    schemas_init_import_citations -.->|"imports"| citation_schema
    schemas_init_import_citations -.->|"imports"| arxiv_paper_schema
    schemas_init_import_citations -.->|"imports"| citation_extraction_schema
    schemas_init_import_discovery -.->|"imports"| discovery_source_schema
    schemas_init_import_discovery -.->|"imports"| scraped_article_metadata_schema
    schemas_init_import_queries -.->|"imports"| research_query_schema
    schemas_init_import_queries -.->|"imports"| query_evaluation_response_schema
    schemas_init_import_search -.->|"imports"| search_result_schema_class
    schemas_init_import_search -.->|"imports"| search_response_schema
    schemas_init_import_tags -.->|"imports"| tag_consolidation_response_schema
    schemas_init_import_tags -.->|"imports"| tag_suggestion_response_schema

    %% Obsidian Plugin Integration
    subgraph "Obsidian Plugin: obsidian-plugin/thoth-obsidian/main.ts"
        thoth_settings_interface["Interface: ThothSettings<br/>Comprehensive configuration interface with 60+ settings for API keys, directories, LLM config, agent behavior, etc."]
        chat_message_interface["Interface: ChatMessage<br/>Chat message structure with role, content, timestamp"]

        thoth_plugin_class["Class: ThothPlugin (extends Plugin)<br/>Main plugin class for Obsidian integration"]
        thoth_plugin_onload["Method: onload() -> Promise<void><br/>Initialize plugin, load settings, start agent if configured"]
        thoth_plugin_onunload["Method: onunload() -> void<br/>Cleanup when plugin is disabled"]
        thoth_plugin_load_settings["Method: loadSettings() -> Promise<void><br/>Load plugin settings from storage"]
        thoth_plugin_save_settings["Method: saveSettings() -> Promise<void><br/>Save plugin settings to storage"]
        thoth_plugin_sync_settings["Method: syncSettingsToBackend() -> Promise<void><br/>Sync settings with backend API"]
        thoth_plugin_get_endpoint["Method: getEndpointUrl() -> string<br/>Get the API endpoint URL"]
        thoth_plugin_start_agent["Method: startAgent() -> Promise<void><br/>Start the Thoth backend process using child_process"]
        thoth_plugin_stop_agent["Method: stopAgent() -> void<br/>Stop the Thoth backend process"]
        thoth_plugin_restart_agent["Method: restartAgent() -> Promise<void><br/>Restart the backend process"]
        thoth_plugin_wait_restart["Method: waitForAgentRestart() -> Promise<void><br/>Wait for agent restart to complete"]
        thoth_plugin_get_env["Method: getEnvironmentVariables()<br/>Build environment variables for backend"]
        thoth_plugin_update_env["Method: updateEnvironmentFile() -> Promise<void><br/>Update .env file with settings"]
        thoth_plugin_update_status["Method: updateStatusBar() -> void<br/>Update plugin status in Obsidian status bar"]
        thoth_plugin_perform_research["Method: performResearch(query: string, editor: Editor) -> Promise<void><br/>Perform research and insert results into editor"]
        thoth_plugin_open_chat["Method: openChatModal() -> void<br/>Open the chat interface modal"]

        chat_modal_class["Class: ChatModal (extends Modal)<br/>Chat interface modal for interacting with the research agent"]
        chat_modal_constructor["Method: constructor(app: App, plugin: ThothPlugin)<br/>Initialize chat modal"]
        chat_modal_on_open["Method: onOpen() -> void<br/>Setup chat interface when modal opens"]
        chat_modal_load_history["Method: loadChatHistory() -> void<br/>Load previous chat messages"]
        chat_modal_add_message["Method: addMessageToChat(role, content) -> void<br/>Add message to chat display"]
        chat_modal_send_message["Method: sendMessage() -> Promise<void><br/>Send message to research agent via API"]
        chat_modal_scroll["Method: scrollToBottom() -> void<br/>Scroll chat to bottom"]
        chat_modal_on_close["Method: onClose() -> void<br/>Cleanup when modal closes"]

        thoth_setting_tab_class["Class: ThothSettingTab (extends PluginSettingTab)<br/>Settings interface for configuring the plugin"]
        thoth_setting_tab_constructor["Method: constructor(app: App, plugin: ThothPlugin)<br/>Initialize settings tab"]
        thoth_setting_tab_display["Method: display() -> void<br/>Render the complete settings interface"]
        thoth_setting_tab_quick_status["Method: addQuickStatus(containerEl) -> void<br/>Add status indicators and health checks"]
        thoth_setting_tab_essential["Method: addEssentialSettings(containerEl) -> void<br/>Add core configuration settings (API keys, directories)"]
        thoth_setting_tab_connection["Method: addConnectionSettings(containerEl) -> void<br/>Add connection configuration (endpoints, ports)"]
        thoth_setting_tab_advanced["Method: addAdvancedSettings(containerEl) -> void<br/>Add advanced settings sections"]
        thoth_setting_tab_llm["Method: addLLMSettings(parentEl) -> void<br/>Add LLM configuration (models, temperatures)"]
        thoth_setting_tab_agent["Method: addAgentBehaviorSettings(parentEl) -> void<br/>Add agent behavior settings"]
        thoth_setting_tab_discovery["Method: addDiscoverySettings(parentEl) -> void<br/>Add discovery system settings"]
        thoth_setting_tab_logging["Method: addLoggingSettings(parentEl) -> void<br/>Add logging configuration"]
        thoth_setting_tab_ui["Method: addUISettings(parentEl) -> void<br/>Add UI preferences"]
        thoth_setting_tab_controls["Method: addAgentControls(containerEl) -> void<br/>Add agent control buttons (start/stop/restart)"]

        thoth_plugin_class --> thoth_plugin_onload
        thoth_plugin_class --> thoth_plugin_onunload
        thoth_plugin_class --> thoth_plugin_load_settings
        thoth_plugin_class --> thoth_plugin_save_settings
        thoth_plugin_class --> thoth_plugin_sync_settings
        thoth_plugin_class --> thoth_plugin_get_endpoint
        thoth_plugin_class --> thoth_plugin_start_agent
        thoth_plugin_class --> thoth_plugin_stop_agent
        thoth_plugin_class --> thoth_plugin_restart_agent
        thoth_plugin_class --> thoth_plugin_wait_restart
        thoth_plugin_class --> thoth_plugin_get_env
        thoth_plugin_class --> thoth_plugin_update_env
        thoth_plugin_class --> thoth_plugin_update_status
        thoth_plugin_class --> thoth_plugin_perform_research
        thoth_plugin_class --> thoth_plugin_open_chat

        chat_modal_class --> chat_modal_constructor
        chat_modal_class --> chat_modal_on_open
        chat_modal_class --> chat_modal_load_history
        chat_modal_class --> chat_modal_add_message
        chat_modal_class --> chat_modal_send_message
        chat_modal_class --> chat_modal_scroll
        chat_modal_class --> chat_modal_on_close

        thoth_setting_tab_class --> thoth_setting_tab_constructor
        thoth_setting_tab_class --> thoth_setting_tab_display
        thoth_setting_tab_class --> thoth_setting_tab_quick_status
        thoth_setting_tab_class --> thoth_setting_tab_essential
        thoth_setting_tab_class --> thoth_setting_tab_connection
        thoth_setting_tab_class --> thoth_setting_tab_advanced
        thoth_setting_tab_class --> thoth_setting_tab_llm
        thoth_setting_tab_class --> thoth_setting_tab_agent
        thoth_setting_tab_class --> thoth_setting_tab_discovery
        thoth_setting_tab_class --> thoth_setting_tab_logging
        thoth_setting_tab_class --> thoth_setting_tab_ui
        thoth_setting_tab_class --> thoth_setting_tab_controls
    end

    %% Obsidian Plugin Internal Method Calls
    thoth_plugin_onload -.->|"calls"| thoth_plugin_load_settings
    thoth_plugin_onload -.->|"calls"| thoth_plugin_start_agent
    thoth_plugin_onload -.->|"calls"| thoth_plugin_update_status
    thoth_plugin_start_agent -.->|"calls"| thoth_plugin_get_env
    thoth_plugin_start_agent -.->|"calls"| thoth_plugin_update_env
    thoth_plugin_restart_agent -.->|"calls"| thoth_plugin_stop_agent
    thoth_plugin_restart_agent -.->|"calls"| thoth_plugin_wait_restart
    thoth_plugin_restart_agent -.->|"calls"| thoth_plugin_start_agent
    thoth_plugin_perform_research -.->|"calls"| thoth_plugin_get_endpoint
    thoth_plugin_open_chat -.->|"creates"| chat_modal_class
    chat_modal_send_message -.->|"calls"| chat_modal_add_message
    chat_modal_send_message -.->|"calls"| chat_modal_scroll
    thoth_setting_tab_display -.->|"calls"| thoth_setting_tab_quick_status
    thoth_setting_tab_display -.->|"calls"| thoth_setting_tab_essential
    thoth_setting_tab_display -.->|"calls"| thoth_setting_tab_connection
    thoth_setting_tab_display -.->|"calls"| thoth_setting_tab_advanced
    thoth_setting_tab_advanced -.->|"calls"| thoth_setting_tab_llm
    thoth_setting_tab_advanced -.->|"calls"| thoth_setting_tab_agent
    thoth_setting_tab_advanced -.->|"calls"| thoth_setting_tab_discovery
    thoth_setting_tab_advanced -.->|"calls"| thoth_setting_tab_logging
    thoth_setting_tab_advanced -.->|"calls"| thoth_setting_tab_ui
    thoth_setting_tab_controls -.->|"calls"| thoth_plugin_start_agent
    thoth_setting_tab_controls -.->|"calls"| thoth_plugin_stop_agent
    thoth_setting_tab_controls -.->|"calls"| thoth_plugin_restart_agent

    %% Obsidian Plugin Integration with Thoth Backend
    thoth_plugin_start_agent -.->|"spawns process"| system_run_api_server
    thoth_plugin_sync_settings -.->|"calls API"| sync_obsidian_settings_func
    thoth_plugin_perform_research -.->|"calls API"| research_query_func
    chat_modal_send_message -.->|"calls API"| research_chat_func
    thoth_setting_tab_quick_status -.->|"calls API"| agent_status_func
    thoth_setting_tab_controls -.->|"calls API"| restart_agent_func

    %% Plugin Configuration Management
    thoth_plugin_class -.->|"uses"| thoth_settings_interface
    chat_modal_class -.->|"uses"| chat_message_interface
    thoth_plugin_update_env -.->|"updates"| thoth_config_class

    %% Obsidian Plugin Styling System
    subgraph "Plugin UI Styling: obsidian-plugin/thoth-obsidian/styles.css"
        obsidian_ribbon_styles["Ribbon Integration<br/>.thoth-ribbon-icon with hover effects"]
        obsidian_settings_styles["Settings UI Framework<br/>.thoth-settings-header, .thoth-settings-section, .thoth-subsection, .thoth-optional-section"]
        obsidian_status_styles["Status Indicators<br/>.thoth-status-grid, .thoth-status-item, .thoth-status-indicator (success/error/warning/info)"]
        obsidian_control_styles["Interactive Elements<br/>.thoth-control-button, .thoth-test-button, button variants for start/stop/restart/test/chat"]
        obsidian_chat_styles["Chat Interface<br/>.thoth-chat-modal, .thoth-message variants, .thoth-chat-input-wrapper, .thoth-send-button"]
        obsidian_statusbar_styles["Status Bar Integration<br/>.status-bar-item.plugin-thoth"]
        obsidian_responsive_styles["Responsive Design<br/>Media queries for mobile/tablet layouts"]
        obsidian_theme_styles["Theme Support<br/>.theme-dark variants, CSS variables integration"]
        obsidian_animation_styles["Animations<br/>@keyframes for spin, section-appear, message-appear"]
    end

    %% Plugin UI Integration
    thoth_plugin_update_status -.->|"uses"| obsidian_statusbar_styles
    thoth_setting_tab_display -.->|"uses"| obsidian_settings_styles
    thoth_setting_tab_quick_status -.->|"uses"| obsidian_status_styles
    thoth_setting_tab_controls -.->|"uses"| obsidian_control_styles
    chat_modal_on_open -.->|"uses"| obsidian_chat_styles
    thoth_plugin_class -.->|"provides"| obsidian_ribbon_styles

    %% Complete Integration Flow Summary
    subgraph "End-to-End Integration Flow"
        obsidian_user["Obsidian User"]
        obsidian_plugin_ui["Plugin UI (TypeScript + CSS)"]
        thoth_backend_api["Thoth Backend API"]
        thoth_services["Thoth Services Layer"]
        thoth_data_processing["Data Processing & Analysis"]
        knowledge_graph["Knowledge Graph & Citations"]
        external_apis["External APIs (arXiv, Semantic Scholar, etc.)"]

        obsidian_user --> obsidian_plugin_ui
        obsidian_plugin_ui --> thoth_backend_api
        thoth_backend_api --> thoth_services
        thoth_services --> thoth_data_processing
        thoth_data_processing --> knowledge_graph
        thoth_services --> external_apis
    end
