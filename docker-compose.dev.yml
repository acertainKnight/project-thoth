# ==============================================================================
# Thoth AI Research Assistant - Development Configuration
# Microservices architecture for local development
# ==============================================================================

version: '3.8'

services:
  # ==============================================================================
  # Infrastructure Services
  # ==============================================================================

  # PostgreSQL Database for Letta Memory System
  letta-postgres:
    image: ankane/pgvector:latest
    container_name: thoth-dev-letta-postgres
    environment:
      - POSTGRES_DB=letta
      - POSTGRES_USER=letta
      - POSTGRES_PASSWORD=letta_dev_password
      - POSTGRES_INITDB_ARGS=--encoding=UTF-8
    volumes:
      - thoth-dev-letta-postgres:/var/lib/postgresql/data
      - ./docker/init-pgvector.sh:/docker-entrypoint-initdb.d/init-pgvector.sh:ro
    ports:
      - "5433:5432"  # Exposed for development access (avoiding conflict with system PostgreSQL)
    networks:
      - thoth-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U letta -d letta"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

  # ChromaDB Vector Database
  chromadb:
    image: chromadb/chroma:latest
    container_name: thoth-dev-chromadb
    environment:
      - CHROMA_SERVER_HOST=0.0.0.0
      - CHROMA_SERVER_HTTP_PORT=8000
      - IS_PERSISTENT=TRUE
      - PERSIST_DIRECTORY=/chroma/chroma
      - ANONYMIZED_TELEMETRY=FALSE
    volumes:
      - thoth-dev-chroma-data:/chroma/chroma
    ports:
      - "8003:8000"
    networks:
      - thoth-dev-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "sh", "-c", "grep -q ':1F40 ' /proc/net/tcp && echo ChromaDB healthy || exit 1"]
      interval: 15s
      timeout: 8s
      retries: 5
      start_period: 45s

  # ==============================================================================
  # Thoth Microservices
  # ==============================================================================

  # Letta Memory Service
  letta:
    image: letta/letta:latest
    container_name: thoth-dev-letta
    environment:
      - LETTA_SERVER_HOST=0.0.0.0
      - LETTA_SERVER_PORT=8283
      - LETTA_PG_URI=postgresql://letta:letta_dev_password@letta-postgres:5432/letta

      # LLM Provider Configuration
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - API_MISTRAL_KEY=${API_MISTRAL_KEY:-}
      - OLLAMA_BASE_URL=${OLLAMA_BASE_URL:-}

      # Security Configuration
      - SECURE=${LETTA_SECURE:-false}
      - LETTA_SERVER_PASSWORD=${LETTA_SERVER_PASSWORD:-}

      # Tool Execution & Sandboxing
      - E2B_API_KEY=${E2B_API_KEY:-}
      - E2B_SANDBOX_TEMPLATE_ID=${E2B_SANDBOX_TEMPLATE_ID:-}
      - TOOL_EXEC_DIR=/workspace/tools

      # Logging
      - LETTA_LOG_LEVEL=DEBUG
    volumes:
      - thoth-dev-letta-data:/var/lib/postgresql/data
      - ./workspace:/workspace  # For tool execution and shared data
    ports:
      - "8283:8283"
    networks:
      - thoth-dev-network
    depends_on:
      letta-postgres:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8283/v1/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 60s

  # Main API Server
  thoth-api:
    build:
      context: .
      dockerfile: docker/api/Dockerfile
      target: development
    container_name: thoth-dev-api
    environment:
      # User permissions
      - HOME=/workspace

      # Letta configuration - override default data directories
      - LETTA_DIR=/workspace/data/letta
      - LETTA_LOGS_DIR=/workspace/logs/letta
      - LETTA_CACHE_DIR=/workspace/data/cache/letta
      - LETTA_CONFIG_DIR=/workspace/data/letta/config

      # Service discovery
      - THOTH_CHROMADB_URL=http://chromadb:8003
      - THOTH_LETTA_URL=http://letta:8283
      - THOTH_MCP_URL=http://thoth-mcp:8001
      - THOTH_DISCOVERY_URL=http://thoth-discovery:8004

      # Server configuration
      - THOTH_API_HOST=0.0.0.0
      - THOTH_API_PORT=8000
      - THOTH_LOG_LEVEL=DEBUG
      - THOTH_DEV_MODE=1

      # Directory paths
      - THOTH_WORKSPACE_DIR=/workspace
      - THOTH_PDF_DIR=/workspace/pdfs
      - THOTH_NOTES_DIR=/workspace/notes
      - THOTH_DATA_DIR=/workspace/data
      - THOTH_LOGS_DIR=/workspace/logs

      # API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
      - API_MISTRAL_KEY=${API_MISTRAL_KEY:-}
      - API_OPENROUTER_KEY=${API_OPENROUTER_KEY:-}
      - API_SEMANTIC_SCHOLAR_KEY=${API_SEMANTIC_SCHOLAR_KEY:-}
    volumes:
      - ./workspace:/workspace
      - ./src:/app/src:ro  # Mount source for development
      - ./prompts:/workspace/prompts:ro
    ports:
      - "8000:8000"
    networks:
      - thoth-dev-network
    depends_on:
      chromadb:
        condition: service_healthy
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

  # MCP Server (Model Context Protocol)
  thoth-mcp:
    build:
      context: .
      dockerfile: docker/mcp/Dockerfile
      target: development
    container_name: thoth-dev-mcp
    environment:
      # User permissions
      - HOME=/workspace

      # Letta configuration - override default data directories
      - LETTA_DIR=/workspace/data/letta
      - LETTA_LOGS_DIR=/workspace/logs/letta
      - LETTA_CACHE_DIR=/workspace/data/cache/letta
      - LETTA_CONFIG_DIR=/workspace/data/letta/config

      # Service discovery
      - THOTH_CHROMADB_URL=http://chromadb:8003
      - THOTH_LETTA_URL=http://letta:8283
      - THOTH_API_URL=http://thoth-api:8000

      # Server configuration
      - THOTH_MCP_HOST=0.0.0.0
      - THOTH_MCP_PORT=8001
      - THOTH_LOG_LEVEL=DEBUG

      # Directory paths
      - THOTH_WORKSPACE_DIR=/workspace
      - THOTH_DATA_DIR=/workspace/data

      # API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
      - ANTHROPIC_API_KEY=${ANTHROPIC_API_KEY:-}
    volumes:
      - ./workspace:/workspace
      - ./src:/app/src:ro  # Mount source for development
    ports:
      - "8001:8001"
    networks:
      - thoth-dev-network
    depends_on:
      - chromadb
      - thoth-api
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8001/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

  # Discovery Service
  thoth-discovery:
    build:
      context: .
      dockerfile: docker/discovery/Dockerfile
      target: development
    container_name: thoth-dev-discovery
    environment:
      # User permissions
      - HOME=/workspace

      # Letta configuration - override default data directories
      - LETTA_DIR=/workspace/data/letta
      - LETTA_LOGS_DIR=/workspace/logs/letta
      - LETTA_CACHE_DIR=/workspace/data/cache/letta
      - LETTA_CONFIG_DIR=/workspace/data/letta/config

      # Service discovery
      - THOTH_CHROMADB_URL=http://chromadb:8003
      - THOTH_API_URL=http://thoth-api:8000

      # Server configuration
      - THOTH_DISCOVERY_HOST=0.0.0.0
      - THOTH_DISCOVERY_PORT=8004
      - THOTH_LOG_LEVEL=DEBUG

      # Discovery settings
      - THOTH_DISCOVERY_AUTO_START_SCHEDULER=true
      - THOTH_DISCOVERY_DEFAULT_MAX_ARTICLES=50
      - THOTH_DISCOVERY_CHECK_INTERVAL=3600

      # Directory paths
      - THOTH_WORKSPACE_DIR=/workspace
      - THOTH_DISCOVERY_SOURCES_DIR=/workspace/discovery

      # API Keys
      - API_SEMANTIC_SCHOLAR_KEY=${API_SEMANTIC_SCHOLAR_KEY:-}
      - API_WEB_SEARCH_KEY=${API_WEB_SEARCH_KEY:-}
    volumes:
      - ./workspace:/workspace
      - ./src:/app/src:ro  # Mount source for development
    ports:
      - "8004:8004"
    networks:
      - thoth-dev-network
    depends_on:
      - chromadb
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8004/health"]
      interval: 15s
      timeout: 5s
      retries: 3
      start_period: 30s

  # PDF Monitor Service
  thoth-pdf-monitor:
    build:
      context: .
      dockerfile: docker/pdf-monitor/Dockerfile
      target: development
    container_name: thoth-dev-pdf-monitor
    environment:
      # User permissions
      - HOME=/workspace

      # Letta configuration - override default data directories
      - LETTA_DIR=/workspace/data/letta
      - LETTA_LOGS_DIR=/workspace/logs/letta
      - LETTA_CACHE_DIR=/workspace/data/cache/letta
      - LETTA_CONFIG_DIR=/workspace/data/letta/config

      # Service discovery
      - THOTH_API_URL=http://thoth-api:8000
      - THOTH_CHROMADB_URL=http://chromadb:8003

      # Monitor configuration
      - THOTH_LOG_LEVEL=DEBUG
      - THOTH_PDF_MONITOR_INTERVAL=30

      # Directory paths
      - THOTH_WORKSPACE_DIR=/workspace
      - THOTH_PDF_DIR=/workspace/pdfs
      - THOTH_NOTES_DIR=/workspace/notes

      # API Keys
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
    volumes:
      - ./workspace:/workspace
      - ./src:/app/src:ro  # Mount source for development
    networks:
      - thoth-dev-network
    depends_on:
      - thoth-api
      - chromadb
    restart: unless-stopped


  # ==============================================================================
  # Development Tools
  # ==============================================================================

  # Development proxy for easy access
  nginx-dev:
    image: nginx:alpine
    container_name: thoth-dev-nginx
    volumes:
      - ./docker/nginx/dev.conf:/etc/nginx/nginx.conf:ro
    ports:
      - "80:80"
      - "443:443"
    networks:
      - thoth-dev-network
    depends_on:
      - thoth-api
      - thoth-mcp
      - thoth-discovery
    restart: unless-stopped

# ==============================================================================
# Development Volumes
# ==============================================================================
volumes:
  thoth-dev-letta-data:
    driver: local
    name: thoth-dev-letta-data

  thoth-dev-letta-postgres:
    driver: local
    name: thoth-dev-letta-postgres

  thoth-dev-chroma-data:
    driver: local
    name: thoth-dev-chroma-data

  # NOTE: workspace is now local bind mount (./workspace)
  # See bind mount volumes in services above

# ==============================================================================
# Development Network
# ==============================================================================
networks:
  thoth-dev-network:
    driver: bridge
    name: thoth-dev-network
    ipam:
      config:
        - subnet: 172.21.0.0/16
